{"version":3,"sources":["data/ProjectMap.ts","components/bits/Breadcrumbs.jsx","components/bits/TimelineItemList.jsx","components/overlays/MainOverlay.jsx","components/overlays/SearchOverlay.jsx","components/Timeline.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProjectMap","source","original","map","type","label","notes","mapTimelines","fn","Object","values","this","timelines","forEach","timeline","i","newTimeline","TimelineObject","children","events","event","newEvent","EventObject","setColor","color","setParentLabel","isChildOf","push","addChildren","get","bind","timelineLabel","eventLabel","undefined","value","parentTimelineLabel","datesList","forEachTimeline","line","start","end","sort","a","b","earliestDate","latestDate","totalLength","rawObject","newChild","newChildren","posn","parentLabel","newColor","newParentLabel","indexOf","Breadcrumbs","props","state","item","selectHandlers","handleSelectProject","handleSelectTimeline","handleSelectEvent","setState","className","tabIndex","onClick","icon","faHashtag","faChevronRight","style","React","Component","TimelineItemList","list","showDetails","toggleDetails","e","checked","length","faEye","faEyeSlash","parent","generateList","timelineFilter","eventFilter","results","getChildEvents","MainOverlay","selectedTimeline","selectedObject","selectedEvent","hasMounted","fullRender","renderLoad","allChildren","getAllChildren","SearchOverlay","searchString","typeFilters","handleSearch","handleFilter","target","val","types","forceUpdate","allItems","getAllItems","filter","id","name","placeholder","onChange","toLowerCase","join","Timeline","handleZoomIn","handleZoom","handleZoomOut","toggleMenu","setOverlay","overlay","openNavigation","openSearch","toggleFullscreen","fullscreen","key","Math","round","random","disabledArray","Array","fill","trackPosn","scrollPosn","zoom","mouseDown","readyForTrack","minWidth","width","maxWidth","minHeight","height","maxHeight","aspectRatio","handleSelect","isTracked","handleToggleLine","handleTrack","handleScroll","handleDragToZoom","handleClearState","handleKeyPress","handleSaveToFile","handleCopyAsJSON","thisObj","window","addEventListener","resizeTicker","canvas","$","position","component","boundsAndLength","left","parseInt","css","coord","lineWrapper","linesLeft","getBoundingClientRect","componentLeft","linesWidth","max","min","callback","closest","attr","delta","oldZoom","newZoom","movementX","altKey","shiftKey","deltaY","is","buttons","hasClass","snapToEvent","x","touches","clientX","coordToPosn","setTimeout","concat","closeOverlay","element","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","getOriginal","display","body","appendChild","click","removeChild","select","setSelectionRange","execCommand","styleProps","trackCoord","posnToCoord","allUniqueDates","theme","onMouseDown","onMouseUp","onKeyDown","faBars","faTimes","faCompress","faExpand","onMouseMove","expanded","isopen","faSearch","faFolderOpen","faFileDownload","faClipboard","dragging","onWheel","disabled","tracked","title","stroke","y1","y2","x1","x2","j","cy","cx","onMouseOver","onMouseOut","y","rx","ry","dominantBaseline","textAnchor","floor","result","selectedTimelineLabel","selectedEventLabel","App","handleLoadFile","json","lines","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5cfb2cc.chunk.js","sourcesContent":["class ProjectMap {\r\n    private original: any;\r\n    private map: any;\r\n\r\n    public type: string;\r\n    public label: string;\r\n    public notes: string;\r\n\r\n    constructor(source: any) {\r\n        this.original = source;\r\n        this.type = source.type;\r\n        this.label = source.label;\r\n        this.notes = source.notes;\r\n        this.map = {};\r\n\r\n        let map = this.map;\r\n        Object.values(source.timelines).forEach(function(timeline, i) {\r\n            let newTimeline: TimelineObject = new TimelineObject(timeline),\r\n                children: Array<string> = [];\r\n            \r\n            Object.values(source.events).forEach(function(event, i) {\r\n                let newEvent: EventObject = new EventObject(event)\r\n                    .setColor(newTimeline.color)\r\n                    .setParentLabel(newTimeline.label);\r\n                \r\n                if(newEvent.isChildOf(newTimeline.label)) children.push(newEvent.label);\r\n            });\r\n\r\n            newTimeline.addChildren(children);\r\n            map[newTimeline.label] = newTimeline;\r\n        });\r\n\r\n        this.get = this.get.bind(this);\r\n        this.mapTimelines = this.mapTimelines.bind(this);\r\n    }\r\n\r\n    get getOriginal() { return this.original }\r\n\r\n    get(timelineLabel: string, eventLabel: string) {\r\n        // Search returns project\r\n        if(timelineLabel === undefined) return this;\r\n        \r\n        // Search returns TimelineObject\r\n        if(eventLabel === undefined)\r\n            return this.map[timelineLabel];\r\n        \r\n        // Search returns EventObject\r\n        return new EventObject(this.original.events[eventLabel])\r\n            .setColor(this.map[timelineLabel].color)\r\n            .setParentLabel(timelineLabel);\r\n    }\r\n    \r\n    set(timelineLabel: string, eventLabel: string, value: any = undefined) {\r\n        if(timelineLabel !== undefined)\r\n            this.map[timelineLabel][eventLabel] = value;\r\n    }\r\n\r\n    forEachTimeline(fn: any) { Object.values(this.map).forEach(fn); }\r\n    mapTimelines = (fn: any) => Object.values(this.map).map(fn);\r\n    \r\n    getChildEvents(parentTimelineLabel: string): Array<EventObject> {\r\n        const get = this.get;\r\n        return this.map[parentTimelineLabel].children.map((eventLabel: string) => get(parentTimelineLabel, eventLabel));\r\n    }\r\n\r\n    /**\r\n     * Returns a sorted array of unique numbers representing the start and end dates of all Timelines\r\n     * @returns {Array<number>} Sorted array of unique numbers representing the start and end dates of all Timelines \r\n     */\r\n     get allUniqueDates() {\r\n        let datesList: Array<number> = [];\r\n        this.forEachTimeline(function(line: TimelineObject) {\r\n            if(!(line.start in datesList)) datesList.push(line.start);\r\n            if(!(line.end in datesList)) datesList.push(line.end);\r\n        });\r\n        datesList.sort((a, b) => a-b);\r\n        return datesList;\r\n    }\r\n\r\n    /**\r\n     * Finds the earliest date, latest date, and total length between all Timelines\r\n     * @returns {object} an object containing earliestDate, latestDate, and totalLength\r\n     */\r\n    get boundsAndLength() {\r\n        let earliestDate: number = -1,\r\n            latestDate: number = -1;\r\n        this.forEachTimeline(function(line: TimelineObject) {\r\n            if(earliestDate === -1) {\r\n                earliestDate = line.start;\r\n                latestDate = line.end;\r\n            }\r\n            else {\r\n                if(line.start < earliestDate) earliestDate = line.start;\r\n                if(line.end > latestDate) latestDate = line.end;\r\n            }\r\n        });\r\n\r\n        return {\r\n            earliestDate: earliestDate,\r\n            latestDate: latestDate,\r\n            totalLength: (latestDate-earliestDate),\r\n        }\r\n    }\r\n}\r\n\r\nclass TimelineObject {\r\n    public label: string;\r\n    public type: string;\r\n    public notes: string;\r\n    public start: number;\r\n    public end: number;\r\n    public color: string;\r\n    \r\n    public children: Array<string>;\r\n\r\n    constructor(rawObject: any) {\r\n        this.label = rawObject.label;\r\n        this.type = rawObject.type;\r\n        this.notes = rawObject.notes;\r\n        this.start = rawObject.start;\r\n        this.end = rawObject.end;\r\n        this.color = rawObject.color;\r\n        \r\n        this.children = [];  \r\n    }\r\n\r\n    addChild(newChild: string) {\r\n        this.children.push(newChild);\r\n    }\r\n    addChildren(newChildren: Array<string>) {\r\n        this.children.push(...newChildren);\r\n    }\r\n}\r\n\r\nclass EventObject {\r\n    public label: string;\r\n    public type: string;\r\n    public notes: string;\r\n    public posn: number;\r\n    private timelines: Array<string>;\r\n    \r\n    public parentLabel: string;\r\n    public color: string;\r\n\r\n    public children: any;\r\n\r\n    constructor(rawObject: any) {\r\n        this.label = rawObject.label;\r\n        this.type = rawObject.type;\r\n        this.notes = rawObject.notes;\r\n        this.posn = rawObject.posn; \r\n        this.timelines = rawObject.timelines; \r\n\r\n        this.parentLabel = \"\";\r\n        this.color = \"\";\r\n\r\n        this.children = [];\r\n    }\r\n\r\n    setColor(newColor: string): EventObject {\r\n        this.color = newColor;\r\n        return this;\r\n    }\r\n    setParentLabel(newParentLabel: string): EventObject {\r\n        this.parentLabel = newParentLabel;\r\n        return this;\r\n    }\r\n    isChildOf(parentLabel: string) {\r\n        return this.timelines.indexOf(parentLabel) >= 0;\r\n    }\r\n}\r\n\r\nexport default ProjectMap;","import React from 'react';\r\n\r\nimport { faChevronRight, faHashtag } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Breadcrumbs extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        this.state = {\r\n            item: props.item,\r\n        };\r\n\r\n        this.selectHandlers = props.selectHandlers;\r\n        this.handleSelectProject = this.selectHandlers.handleSelectProject;\r\n        this.handleSelectTimeline = this.selectHandlers.handleSelectTimeline;\r\n        this.handleSelectEvent = this.selectHandlers.handleSelectEvent;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            item: props.item,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const item = this.state.item, \r\n            { handleSelectProject, handleSelectTimeline } = this;\r\n\r\n        return (\r\n            <div className=\"parent-label\">\r\n                <span className=\"link-button\" tabIndex=\"0\" onClick={handleSelectProject}>\r\n                    <FontAwesomeIcon icon={faHashtag} />\r\n                    PROJECT\r\n                </span>\r\n                <FontAwesomeIcon icon={faChevronRight} />\r\n\r\n                {\r\n                    item.type === \"event\" &&\r\n                        <span className=\"link-button\" tabIndex=\"0\" label={item.parentLabel}\r\n                            style={{color: item.color}}\r\n                            onClick={handleSelectTimeline}>\r\n                            {item.parentLabel}\r\n                        </span>\r\n                }\r\n                {\r\n                    item.type === \"event\" && <FontAwesomeIcon icon={faChevronRight} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Breadcrumbs;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash, } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\nclass TimelineItemList extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        this.state = {\r\n            list: props.list,\r\n            label: props.label,\r\n            showDetails: props.showDetails,\r\n        };\r\n\r\n        this.selectHandlers = props.selectHandlers;\r\n        this.handleSelectProject = this.selectHandlers.handleSelectProject;\r\n        this.handleSelectTimeline = this.selectHandlers.handleSelectTimeline;\r\n        this.handleSelectEvent = this.selectHandlers.handleSelectEvent;\r\n\r\n        this.toggleDetails = this.toggleDetails.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            list: props.list,\r\n        })\r\n    }\r\n\r\n    toggleDetails(e) {\r\n        const checked = this.state.showDetails;\r\n        this.setState({\r\n            showDetails: !checked,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails, \r\n            { selectHandlers, handleSelectTimeline, handleSelectEvent, toggleDetails } = this;\r\n\r\n        return (\r\n            <div className=\"timeline-item-list\">\r\n                <header className=\"list-header\">\r\n                    <div className=\"list-item-count\">{`${this.state.list.length} ${this.state.label}...`}</div>\r\n                    <button className=\"scale-icon list-detail-toggle\" onClick={toggleDetails}>\r\n                        <FontAwesomeIcon icon={showDetails?faEye:faEyeSlash} />\r\n                        {` Show details?`}\r\n                    </button>\r\n                </header>\r\n                <ul className=\"list-body\">\r\n                    {\r\n                        this.state.list.map((item, i) =>\r\n                            <li className=\"list-item\" key={i} type={item.type}\r\n                            style={{color: item.type===\"timeline\"?item.color:\"white\"}} >\r\n                                <div className=\"item-summary-cell\">\r\n                                    <Breadcrumbs item={item} selectHandlers={selectHandlers} />\r\n                                    <div className=\"item-label link-button\" tabIndex=\"0\"\r\n                                        type={item.type} parent={item.parentLabel} label={item.label}\r\n                                        onClick={item.type===\"timeline\"?handleSelectTimeline:handleSelectEvent}>\r\n                                        {item.label}\r\n                                    </div>\r\n                                    {\r\n                                        showDetails && <div className=\"item-notes\">{item.notes}</div>\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                    { item.type === \"event\" && <div>{item.posn}</div> }\r\n                                    { item.type === \"timeline\" && <div>{item.start} &#8211; {item.end}</div> }\r\n                                </div>\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction generateList(source = {}, timelineFilter = ()=> true, eventFilter = () => true, sort = (a, b) => 0 ) {\r\n    let results = [];\r\n\r\n    source.forEachTimeline(timeline => {\r\n        if(timelineFilter(timeline)) results.push(timeline);\r\n        source.getChildEvents(timeline.label).forEach(event => {\r\n            if(eventFilter(event)) results.push(event);\r\n        });\r\n    });\r\n    \r\n\r\n    results.sort(sort);\r\n\r\n    return results;\r\n}\r\n\r\nexport { TimelineItemList, generateList };","import React from 'react';\r\n\r\nimport { TimelineItemList, generateList } from '../bits/TimelineItemList';\r\nimport Breadcrumbs from '../bits/Breadcrumbs';\r\n\r\nclass MainOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: props.source,\r\n            selectedTimeline: props.selectedObject.timeline,\r\n            selectedEvent: props.selectedObject.event,\r\n\r\n            hasMounted: false,\r\n        };\r\n\r\n        this.selectHandlers = props.selectHandlers;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            source: props.source,\r\n            selectedTimeline: props.selectedObject.timeline,\r\n            selectedEvent: props.selectedObject.event,\r\n        });\r\n    }\r\n\r\n    get getAllChildren() {\r\n        const { selectedTimeline, selectedEvent, } = this.state,\r\n            sort = (a, b) => (a.start ?? a.posn) > (b.start ?? b.posn);\r\n        \r\n        if(selectedTimeline === undefined)\r\n            return generateList(this.state.source, () => true, () => false, sort);\r\n        else if(selectedTimeline !== undefined && selectedEvent === undefined)\r\n            return generateList(this.state.source, () => false, (event) => event.timelines.indexOf(selectedTimeline.label) >= 0, sort);\r\n        return [];\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return <div></div>\r\n    }\r\n\r\n    fullRender() {\r\n        const { source, selectedTimeline, selectedEvent } = this.state,\r\n              selectHandlers = this.selectHandlers;\r\n        \r\n        let allChildren = this.getAllChildren,\r\n            selectedObject = source.get(selectedTimeline?.label, selectedEvent?.label);\r\n\r\n        return (\r\n            <div className=\"main-overlay\">\r\n                {\r\n                    selectedObject.type !== \"project\" &&\r\n                        <Breadcrumbs item={source.get(selectedTimeline?.label, selectedEvent?.label)}\r\n                            selectHandlers={selectHandlers} /> \r\n                }\r\n                <div className=\"notes-section\">\r\n                    <div className=\"selected-label\">{ selectedObject.label }</div>\r\n                    <div className=\"selected-notes\">{ selectedObject.notes }</div>\r\n                </div>\r\n                <div className=\"hr\" />\r\n                {\r\n                    selectedEvent === undefined &&\r\n                        <TimelineItemList\r\n                            list={allChildren}\r\n                            label=\"children\"\r\n                            showDetails={false}\r\n                            selectHandlers={selectHandlers} /> }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainOverlay;","import React from 'react';\r\n\r\nimport { TimelineItemList, generateList } from '../bits/TimelineItemList';\r\n\r\nclass SearchOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: props.source,\r\n            searchString: \"\",\r\n            typeFilters: [\"timeline\", \"event\"],\r\n\r\n            hasMounted: false,\r\n        };\r\n\r\n        this.selectHandlers = props.selectHandlers;\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            source: props.source,\r\n        });\r\n    }\r\n\r\n    get getAllItems() {\r\n        const searchString = this.state.searchString.toLowerCase(),\r\n            timelineFilter = timeline =>\r\n                timeline.label.toLowerCase().indexOf(searchString) >= 0 ||\r\n                timeline.notes.toLowerCase().indexOf(searchString) >= 0,\r\n            eventFilter = event =>\r\n                event.timelines.join(\"\").toLowerCase().indexOf(searchString) >= 0 ||\r\n                event.label.toLowerCase().indexOf(searchString) >= 0 ||\r\n                event.notes.toLowerCase().indexOf(searchString) >= 0,\r\n            sort = (a, b) => {\r\n                if(a.label > b.label || (b.type===\"timeline\" && a.type===\"event\"))\r\n                    return 1;\r\n                if(b.label > a.label || (a.type===\"timeline\" && b.type===\"event\"))\r\n                    return -1;\r\n                return 0;\r\n            };\r\n        \r\n        \r\n        let results = generateList(this.state.source, timelineFilter, eventFilter, sort);\r\n\r\n        return results;\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState({searchString: e.target.value});\r\n    }\r\n\r\n    handleFilter(e) {\r\n        const val = e.target.value;\r\n        \r\n        let types = [\"timeline\", \"event\"];\r\n        if(val === \"Timelines only\") types = [\"timeline\"];\r\n        if(val === \"Events only\") types = [\"event\"];\r\n\r\n        this.setState({typeFilters: types});\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return <div></div>\r\n    }\r\n\r\n    fullRender() {\r\n        const { searchString, typeFilters } = this.state,\r\n            { selectHandlers, handleSearch, handleFilter } = this,\r\n            \r\n            allItems = this.getAllItems.filter(item => {\r\n                return typeFilters.indexOf(item.type) >= 0\r\n            });\r\n        \r\n        return (\r\n            <div className=\"search-overlay\">\r\n                <datalist id=\"results\">\r\n                    {\r\n                        allItems.map((item, i) => <option key={i} value={item.label} />)\r\n                    }\r\n                </datalist>\r\n                <div className=\"search-controls\">\r\n                    <input className=\"search-field\"\r\n                        name=\"search-field\" list=\"results\"\r\n                        value={searchString} placeholder=\"Search...\"\r\n                        onChange={handleSearch} />\r\n                    <select className=\"search-filter\" onChange={handleFilter}>\r\n                        <option value=\"Timelines & Events\">Timelines & Events</option>\r\n                        <option value=\"Timelines only\">Timelines only</option>\r\n                        <option value=\"Events only\">Events only</option>\r\n                    </select>\r\n                </div>\r\n                <TimelineItemList\r\n                    list={allItems}\r\n                    label=\"results\"\r\n                    showDetails={true}\r\n                    selectHandlers={selectHandlers} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchOverlay;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFolderOpen, faClipboard, faBars, faInfo, faSearch, faTimes, faEye, faEyeSlash, faExpand, faCompress, faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport {  } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport ProjectMap from '../data/ProjectMap.ts';\r\n\r\nimport MainOverlay from './overlays/MainOverlay';\r\nimport SearchOverlay from './overlays/SearchOverlay';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        const source = props.source;\r\n        Object.values(source.events).forEach(function(event, i) {\r\n            const timelines = event.timelines.map(key => source.timelines[key]);\r\n            let earliestDate, latestDate;\r\n            timelines.forEach(function(val, i) {\r\n                if(earliestDate===undefined) {\r\n                    earliestDate = val.start;\r\n                    latestDate = val.end;\r\n                    return;\r\n                }\r\n                if(val.start < earliestDate) return (earliestDate = val.start);\r\n                if(val.start > latestDate) return (latestDate = val.start);\r\n            });\r\n\r\n            event.posn = Math.round(Math.random()*(latestDate-earliestDate) + earliestDate);\r\n        });\r\n\r\n        this.state = {\r\n            source: new ProjectMap(source),\r\n            selectedTimeline: undefined,\r\n            selectedEvent: undefined,\r\n            overlay: \"none\",\r\n            fullscreen: false,\r\n            \r\n            disabledArray: Array(Object.values(props.source.timelines).length).fill(false),\r\n            trackPosn: -1,\r\n            scrollPosn: 0,\r\n            zoom: 1,\r\n            \r\n            hasMounted: false,\r\n            mouseDown: null,\r\n            readyForTrack: true,\r\n\r\n            // Component props\r\n            minWidth: props.minWidth,\r\n            width: props.width,\r\n            maxWidth: props.maxWidth,\r\n            minHeight: props.minHeight,\r\n            height: props.height,\r\n            maxHeight: props.maxHeight,\r\n            aspectRatio: props.aspectRatio,\r\n        };\r\n        \r\n        // Select handlers\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleSelectProject = this.handleSelectProject.bind(this);\r\n        this.handleSelectTimeline = this.handleSelectTimeline.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        \r\n        // Tracking and scrolling handlers\r\n        this.isTracked = this.isTracked.bind(this);\r\n        this.handleToggleLine = this.handleToggleLine.bind(this);\r\n        this.handleTrack = this.handleTrack.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n        this.handleDragToZoom = this.handleDragToZoom.bind(this);\r\n        \r\n        // Major state change handlers\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.handleClearState = this.handleClearState.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        \r\n        // Export button handlers\r\n        this.handleSaveToFile = this.handleSaveToFile.bind(this);\r\n        this.handleCopyAsJSON = this.handleCopyAsJSON.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let thisObj = this;\r\n        window.addEventListener('resize', function() {\r\n            const resizeTicker = thisObj.state.resizeTicker;\r\n            thisObj.setState({\r\n                resizeTicker: (resizeTicker ?? 0) + 1,\r\n            });\r\n        });\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                Complex Getter Functions                                //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Finds the selected Timeline and Event objects from their labels\r\n     * @returns {object} an object containing selectedTimeline and selectedEvent (both defaulting to undefined)\r\n     */\r\n    get selectedObject() {\r\n        let result = {timeline: undefined, event: undefined, };\r\n        const { source, selectedTimeline: selectedTimelineLabel, selectedEvent: selectedEventLabel } = this.state;\r\n        if(selectedTimelineLabel === undefined) return result;\r\n\r\n        result.timeline = source.get(selectedTimelineLabel);\r\n        if(selectedEventLabel === undefined) return result;\r\n\r\n        result.event = source.get(selectedTimelineLabel, selectedEventLabel);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Translates a position on the timeline to the appropriate position in relation to the DOM \r\n     * @param {number} posn - the timeline posn to use as a reference\r\n     * @returns {number} the cooresponding x-coordinate of the position in pixels\r\n     */\r\n    posnToCoord(posn) {\r\n        const canvas = $(\"ul.timeline > .timeline-item > .line-container\");\r\n        if(canvas.position() === undefined) return 0;\r\n    \r\n        const component = $(\".timeline\");\r\n        const { scrollPosn, zoom } = this.state,\r\n            totalLength = this.state.source.boundsAndLength.totalLength,\r\n            canvasLeft = canvas.position().left,\r\n            componentLeft = component.position().left,\r\n            paddingOffset = parseInt(canvas.css(\"padding-left\")),\r\n            canvasWidth = canvas.width();\r\n\r\n        return (canvasLeft - componentLeft + paddingOffset - 2)     // Base value (lowest possible)\r\n            + canvasWidth*((posn - scrollPosn)/(totalLength/zoom)); // Portion of the canvas SVG's width                                                    // \r\n    }\r\n\r\n    /**\r\n     * Translates a coordinate in relation to the DOM to a position on the timeline \r\n     * @param {number} coord - the x-coordinate to use as a reference\r\n     * @returns {number} the correspdoning position on the timeline\r\n     */\r\n    coordToPosn(coord) {\r\n        const component = $(\".timeline\"),\r\n            lineWrapper = $(\".timeline > .timeline-item > .line-container > .line-wrapper\");\r\n        const { zoom, scrollPosn } = this.state,\r\n              { earliestDate, latestDate, totalLength } = this.state.source.boundsAndLength,\r\n              linesLeft = lineWrapper[0]?.getBoundingClientRect()?.left,\r\n              componentLeft = component.position().left,\r\n              linesWidth = lineWrapper.width();\r\n\r\n        return Math.max(earliestDate, Math.min(latestDate,\r\n            (totalLength/zoom**2)*(coord - (linesLeft - componentLeft))/(linesWidth/zoom) + Math.max(earliestDate, scrollPosn)));\r\n    }\r\n\r\n    /**\r\n     * Is the current tracker position within the bounds of the given line? \r\n     * @param {Object} line - the x-coordinate to use as a reference\r\n     * @returns {boolean} whether the given line is currently tracked\r\n     */\r\n     isTracked(line) {\r\n        const trackPosn = this.state.trackPosn;\r\n        return !(line.start>trackPosn || line.end<trackPosn) || trackPosn===-1;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                    Timeline Controls                                   //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * Handles the selecting of Timeline or Event objects\r\n     * @param {string} timelineLabel - the label of the selected Timeline or the Timeline of the selected Object\r\n     * @param {string} eventLabel - the label of the selected Event (defaults to undefined)\r\n     * @param {string} overlayPipeline - the label of the overlay that should be shown on-selection (defaults to the current overlay)\r\n     * @param {function} callback - the callback that should be called on-selection (defaults to an empty function)\r\n     */\r\n    handleSelect(timelineLabel, eventLabel = undefined, callback = () => {}) {\r\n        this.setState({\r\n            selectedTimeline: timelineLabel,\r\n            selectedEvent: eventLabel,\r\n            overlay: \"main\",\r\n        }, callback());\r\n    }\r\n    /**\r\n     * Handles the navigating to the root Project\r\n     * @param {event} e - the event that initated the selection; used for identifying the selected Timeline\r\n     * @helper {@link Timeline#handleSelect}\r\n     */\r\n     handleSelectProject(e) { this.handleSelect(undefined); }\r\n    /**\r\n     * Handles the selection of Timelines\r\n     * @param {event} e - the event that initated the selection; used for identifying the selected Timeline\r\n     * @helper {@link Timeline#handleSelect}\r\n     */\r\n     handleSelectTimeline(e) {\r\n        let timelineLabel = $(e.target).closest(\"[label]\").attr(\"label\");\r\n\r\n        this.handleSelect(timelineLabel);\r\n    }\r\n    /**\r\n     * Handles the selection of Events\r\n     * @param {event} e - the event that initated the selection; used for identifying the selected Event\r\n     * @helper {@link Timeline#handleSelect}\r\n     */\r\n    handleSelectEvent(e) {\r\n        let timelineLabel = $(e.target).attr(\"parent\"),\r\n            eventLabel = $(e.target).attr(\"label\");\r\n\r\n        this.handleSelect(timelineLabel, eventLabel);\r\n    }\r\n\r\n    /**\r\n     * Handles zooming the Timelines view in or out\r\n     * @param {number} delta - the degree, positive or negative, to which the view should be zoomed in\r\n     */\r\n    handleZoom(delta) {\r\n        const { zoom: oldZoom, scrollPosn } = this.state;\r\n        const { totalLength } = this.state.source.boundsAndLength,\r\n              newZoom = Math.max(1, Math.min(2, oldZoom + delta));\r\n            \r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n    /**\r\n     * Handles zooming the Timelines view in\r\n     * @helper {@link Timeline#handleZoom}\r\n     */\r\n    handleZoomIn = () => this.handleZoom(0.1);\r\n    /**\r\n     * Handles zooming the Timelines view out\r\n     * @helper {@link Timeline#handleZoom}\r\n     */\r\n    handleZoomOut = () => this.handleZoom(-0.1);\r\n\r\n    /**\r\n     * Handles zooming in and out by dragging horizontally on the zoom indicator\r\n     * @param {event} e - the event that initated the zoom; used for identifying intended zoom direction\r\n     * @helper {@link Timeline#handleZoomIn}\r\n     * @helper {@link Timeline#handleZoomOut}\r\n     */\r\n    handleDragToZoom(e) {\r\n        if(e.movementX > 0) this.handleZoomIn();\r\n        if(e.movementX < 0) this.handleZoomOut();\r\n    }\r\n\r\n    /**\r\n     * Handles the zooming and horizontal scrolling of the Timeline view\r\n     * @param {event} e - the event that initated the scroll; used for identifying intended action\r\n     * @helper {@link Timeline#handleZoomIn}\r\n     * @helper {@link Timeline#handleZoomOut}\r\n     */\r\n    handleScroll(e) {\r\n        if(!e.altKey && !e.shiftKey) return;\r\n        \r\n        if(e.altKey) {\r\n            if(e.deltaY > 0) return this.handleZoomOut(e);\r\n            else return this.handleZoomIn(e);\r\n        }\r\n        else if(e.shiftKey) {\r\n            const { scrollPosn, zoom } = this.state,\r\n                  { earliestDate, latestDate, totalLength } = this.state.source.boundsAndLength;\r\n            const delta = (e.deltaY < 0 ? -1 : 1)*totalLength/20;\r\n            \r\n            this.setState({\r\n                scrollPosn: Math.min(latestDate - totalLength/zoom, Math.max(earliestDate, scrollPosn + delta)),\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the snapping of the tracker to Events in the Timelines view\r\n     * @param {event} e - the event that initated the tracking; used for identifying the snapped Event\r\n     */\r\n    snapToEvent(e) {\r\n        const trackPosn = $(e.target).attr(\"posn\");\r\n            \r\n        this.setState({\r\n            trackPosn: trackPosn,\r\n        });\r\n    }\r\n    /**\r\n     * Handles tracking in the Timelines view\r\n     * @param {event} e - the event that initated the tracking; used for identifying the tracking position\r\n     * @helper {@link Timeline#snapToEvent}\r\n     */\r\n    handleTrack(e) {\r\n        const validEventTypes = [\"click\", \"mousedown\", \"mousemove\", \"touchmove\"];\r\n        if($(e.target).is(\".timeline-bottom *\") ||\r\n            $(e.target).is(\".timeline-item > .line-label *\") ||\r\n            ($(e.target).is(\".line-event\") && e.type === \"click\") ||\r\n            validEventTypes.indexOf(e.type) < 0 ||\r\n            (e.type===\"touchmove\" && !this.state.readyForTrack) ||\r\n            e.buttons !== 1) return;\r\n        if($(e.target).hasClass(\"line-event\") && [\"mousemove\", \"touchmove\"].indexOf(e.type) >= 0)\r\n            return this.snapToEvent(e);\r\n\r\n        const x = e.type === 'touchmove' ?\r\n                  e.touches[0].clientX :\r\n                  e.clientX;\r\n        \r\n        let trackPosn = this.coordToPosn(x);\r\n        this.setState({\r\n            trackPosn: trackPosn,\r\n            readyForTrack: false,\r\n        }, function() {\r\n            let thisObj = this;\r\n            let setState = () => {thisObj.setState({ readyForTrack: true, })};\r\n            setTimeout(setState, 0);                    \r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles toggling a Timeline on and off in the Timelines view\r\n     * @param {event} e - the event that initated the toggling; used for identifying the toggled Timeline\r\n     */\r\n    handleToggleLine(e) {\r\n        let disabledArray = this.state.disabledArray.concat([]);\r\n        this.state.source.forEachTimeline(function(line, i) {\r\n            if(line.label === $(e.target).closest(\".timeline-item\").attr(\"label\"))\r\n                disabledArray[i] = !disabledArray[i];\r\n        })\r\n        this.setState({\r\n            disabledArray: disabledArray,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles reseting the selected Timeline and Event objects, the tracker, and the overlay \r\n     */\r\n    handleClearState() {\r\n        if(this.state.overlay !== \"none\") this.closeOverlay();\r\n        else this.setState({\r\n            trackPosn: -1,\r\n            selectedTimeline: undefined,\r\n            selectedEvent: undefined,\r\n            zoom: 1,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles key presses\r\n     * @param {event} e - the keyboard event; used for identifying the intended action\r\n     */\r\n    handleKeyPress(e) {\r\n        if(e.key === \"Escape\") {\r\n            if(this.state.fullscreen) this.toggleFullscreen();\r\n            else this.handleClearState();\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                      Menu Methods                                      //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * Sets the overlay that should be displayed on top of the Timelines view\r\n     * @param {string} overlay - the label of the overlay that should be displayed\r\n     */\r\n    setOverlay(overlay) {\r\n        this.setState({\r\n            overlay: overlay,\r\n        });\r\n    }\r\n    /**\r\n     * Opens the menu overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n    toggleMenu = () => this.setOverlay(this.state.overlay===\"none\"?\"menu\":\"none\");\r\n    /**\r\n     * Opens the navigation overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n    openNavigation = () => this.setOverlay(\"main\");\r\n    /**\r\n     * Opens the search overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n     openSearch = () => this.setOverlay(\"search\");\r\n\r\n    toggleFullscreen = () => this.setState({\r\n        fullscreen: !this.state.fullscreen,\r\n    });\r\n    \r\n    /**\r\n     * Saves the list of Timelines and Events to a .JSON file\r\n     */\r\n    handleSaveToFile() {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.state.source.getOriginal)));\r\n        element.setAttribute('download', \"timeline.json\");       \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    /**\r\n     * Copies the list of Timelines and Events to the clipboard as a JSON object\r\n     */\r\n    handleCopyAsJSON() {\r\n        let element = document.createElement('input');\r\n        element.setAttribute(\"type\", \"text\");\r\n        element.value = JSON.stringify(this.state.source.getOriginal);\r\n        document.body.appendChild(element);\r\n        element.select();\r\n        element.setSelectionRange(0, 99999); /* For mobile devices */\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                     Render Methods                                     //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Renders the component\r\n     * @helper {@link Timeline#renderLoad}\r\n     * @helper {@link Timeline#fullRender}\r\n     */\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        return this.renderLoad();\r\n    }\r\n\r\n    /**\r\n     * Renders the unmounted component with a loading animation\r\n     */\r\n    renderLoad() {\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <div className=\"load-spinner\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Renders the mounted component\r\n     */\r\n    fullRender() {\r\n              // Get all necessary values from the state\r\n        const { source, selectedTimeline, selectedEvent, overlay, disabledArray, mouseDown, zoom, scrollPosn, trackPosn } = this.state,\r\n              styleProps = {\r\n                  minWidth: this.state.minWidth,\r\n                  width: this.state.width,\r\n                  maxWidth: this.state.maxWidth,\r\n                  minHeight: this.state.minHeight,\r\n                  height: this.state.height,\r\n                  maxHeight: this.state.maxHeight,\r\n                  aspectRatio: this.state.aspectRatio,\r\n              },\r\n\r\n              // Get all necessary values from complex getters\r\n              earliestDate = this.state.source.boundsAndLength.earliestDate + this.state.scrollPosn,\r\n              totalLength = this.state.source.boundsAndLength.totalLength,\r\n              selectedObject = this.selectedObject,\r\n              trackCoord = this.posnToCoord(this.state.trackPosn),\r\n              allUniqueDates = this.state.source.allUniqueDates,\r\n              isTracked = this.isTracked,\r\n              \r\n              // Get all necessary timeline control methods\r\n              handleSelectProject = this.handleSelectProject,\r\n              handleSelectTimeline = this.handleSelectTimeline,\r\n              handleSelectEvent = this.handleSelectEvent,\r\n              handleScroll = this.handleScroll,\r\n              handleDragToZoom = this.handleDragToZoom,\r\n              handleToggleLine = this.handleToggleLine,\r\n              handleTrack = this.handleTrack,\r\n              handleClearState = this.handleClearState,\r\n              handleKeyPress = this.handleKeyPress,\r\n              \r\n              // Get all necessary menu methods\r\n              toggleFullscreen = this.toggleFullscreen,\r\n              toggleMenu = this.toggleMenu,\r\n              openNavigation = this.openNavigation,\r\n              openSearch = this.openSearch,\r\n              handleSaveToFile = this.handleSaveToFile,\r\n              handleCopyAsJSON = this.handleCopyAsJSON,\r\n\r\n              // Get all necessary DOM-based values\r\n              linesLeft = $(\"ul.timeline > .timeline-item > .line-container\").position()?.left ?? 0;\r\n        \r\n        const selectHandlers = { handleSelectProject, handleSelectTimeline, handleSelectEvent };\r\n        \r\n        return (\r\n            <div className=\"timeline-container\" theme={\"light\"} style={styleProps} tabIndex=\"0\"\r\n                 fullscreen={this.state.fullscreen===true?\"fullscreen\":undefined}\r\n                 onMouseDown={(e) => this.setState({ mouseDown: e.target, })}\r\n                 onMouseUp={(e) => {this.setState({ mouseDown: null, })}}\r\n                 onKeyDown={handleKeyPress} >\r\n                <header className=\"timeline-container-header\">\r\n                    <button className=\"scale-icon menu-button\" onClick={toggleMenu}>\r\n                        <FontAwesomeIcon icon={this.state.overlay===\"none\"?faBars:faTimes} />\r\n                        <span>{this.state.overlay===\"none\"?\"Menu\":\"Close\"}</span>\r\n                    </button>\r\n                    <div className=\"project-title\">{source.label}</div>\r\n                    <button className=\"scale-icon expand-collapse-button\" onClick={toggleFullscreen}>\r\n                        <FontAwesomeIcon icon={this.state.fullscreen===true?faCompress:faExpand} />\r\n                        <span>{this.state.fullscreen===true?\"Collapse\":\"Expand\"}</span>\r\n                    </button>\r\n                </header>\r\n                <div className=\"timeline-container-body\" onMouseMove={handleTrack}>\r\n                    <div className=\"overlay-layer\" expanded={overlay!==\"none\" ? \"expanded\" : undefined}>\r\n                        {\r\n                            overlay !== \"none\" &&\r\n                                <ul className=\"menu-overlay\">\r\n                                    <li className=\"scale-icon search-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        isopen={overlay===\"search\"?\"true\":undefined} onClick={openSearch} >\r\n                                        <FontAwesomeIcon icon={faSearch} />\r\n                                        <span>Search</span>\r\n                                    </li>\r\n                                    <li className=\"scale-icon open-navigation\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        isopen={overlay===\"main\"?\"true\":undefined} onClick={openNavigation} >\r\n                                        <FontAwesomeIcon icon={faFolderOpen} />\r\n                                        <span>Navigation view</span>\r\n                                    </li>\r\n                                    <li className=\"scale-icon save-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        onClick={handleSaveToFile} >\r\n                                        <FontAwesomeIcon icon={faFileDownload} />\r\n                                        <span>Download as file</span>\r\n                                    </li>\r\n                                    <li className=\"scale-icon copy-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        onClick={handleCopyAsJSON} >\r\n                                        <FontAwesomeIcon icon={faClipboard} />\r\n                                        <span>Copy as JSON</span>\r\n                                    </li>\r\n                                    {/* <li className=\"scale-icon about-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"} >\r\n                                        <FontAwesomeIcon icon={faInfo} />\r\n                                        <span>About</span>\r\n                                    </li> */}\r\n                                </ul>\r\n                        }\r\n                        {\r\n                            overlay === \"main\" &&\r\n                                <MainOverlay\r\n                                    source={source}\r\n                                    selectedObject={selectedObject}\r\n                                    selectHandlers={selectHandlers} />\r\n                        }\r\n                        {\r\n                            overlay === \"search\" &&\r\n                                <SearchOverlay\r\n                                    source={source}\r\n                                    selectHandlers={selectHandlers} />\r\n                        }\r\n                    </div>\r\n                    <ul className=\"timeline\" dragging={mouseDown!==null ? \"dragging\" : undefined} onWheel={handleScroll} >\r\n                        <li className=\"timeline-item ruler-container\">\r\n                            <div />\r\n                            <div className=\"ruler\">\r\n                                <div className=\"ruler-wrapper\">\r\n                                    {\r\n                                        allUniqueDates.map((posn, i) =>\r\n                                            posn >= scrollPosn &&\r\n                                                <div className=\"rule\" posn={posn} key={i}\r\n                                                    style={{ \"left\": 100*(posn - earliestDate)/(totalLength/zoom) + \"%\" }} />\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        {\r\n                            source.mapTimelines((line, i) =>\r\n                                <li className=\"timeline-item\" label={line.label} key={i}\r\n                                    disabled={disabledArray[i] ? \"disabled\" : undefined}\r\n                                    tracked={isTracked(line) ? \"tracked\" : undefined}>\r\n                                    <div className=\"line-label\" title={line.label}\r\n                                        style={{ \"color\": line.color }}>\r\n                                        <button className=\"scale-icon line-toggle\" tabIndex={overlay===\"none\"?\"0\":\"-1\"} onClick={handleToggleLine}>\r\n                                            <FontAwesomeIcon icon={disabledArray[i] ? faEyeSlash : faEye} />\r\n                                        </button>\r\n                                        <button className=\"line-name link-button\" tabIndex={overlay===\"none\"?\"0\":\"-1\"}\r\n                                            label={line.label} onClick={handleSelectTimeline}>\r\n                                            <span>{line.label}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"line-container\">\r\n                                        <div className=\"line-wrapper\">\r\n                                            <svg>\r\n                                                {\r\n                                                    (line.start >= scrollPosn || line.end >= scrollPosn) &&\r\n                                                    <line className=\"line-main\" stroke={line.color} y1=\"50%\" y2=\"50%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                    }\r\n                                                {\r\n                                                    line.start >= scrollPosn &&\r\n                                                        <line className=\"line-end\" stroke={line.color} y1=\"35%\" y2=\"65%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                }\r\n                                                {\r\n                                                    line.end >= scrollPosn &&\r\n                                                        <line className=\"line-end\" stroke={line.color} y1=\"35%\" y2=\"65%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                }\r\n                                                {\r\n                                                    source.getChildEvents(line.label).map((event, j) =>\r\n                                                        event.posn >= scrollPosn &&\r\n                                                            <g key={j}>\r\n                                                                <circle className=\"line-event\" posn={event.posn} label={event.label} tabIndex={!disabledArray[i] && isTracked(line) && overlay===\"none\" ? \"0\" : undefined}\r\n                                                                    stroke={line.color} cy=\"50%\" cx={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    onMouseOver={(e) => !(line.label===selectedTimeline && event.label===selectedEvent) && e.target.setAttribute('r', '0.75em') }\r\n                                                                    onMouseOut={(e) => !(line.label===selectedTimeline && event.label===selectedEvent) && e.target.setAttribute('r', '0.5em') }\r\n                                                                    parent={line.label} onClick={handleSelectEvent} >\r\n                                                                </circle>\r\n                                                                <line y1=\"50%\" y2=\"0%\"\r\n                                                                    x1={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    x2={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"} />\r\n                                                                <rect fill=\"white\" height=\"1.5em\" y=\"-0.75em\" rx=\"0.25em\" ry=\"0.25em\"\r\n                                                                    width={`[${event.posn}] ${event.label}`.length + \"ch\"}\r\n                                                                    x={\"calc(\" + 100*(event.posn - earliestDate)/(totalLength/zoom) + \"% - \" + (`[${event.posn}] ${event.label}`.length/2) + \"ch)\"}\r\n                                                                />\r\n                                                                <text x={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    dominantBaseline=\"middle\" textAnchor=\"middle\">\r\n                                                                    {`[${event.posn}] ${event.label}`}\r\n                                                                </text>\r\n                                                            </g>\r\n                                                    )\r\n                                                }\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                    {\r\n                        trackPosn >= scrollPosn &&\r\n                            <div className=\"timeline-tracker\" posn={trackPosn}\r\n                                style={{ \"left\": trackCoord + \"px\" }} />\r\n                    }\r\n                    <div className=\"timeline-bottom\">\r\n                        <div className=\"timeline-scrollbar\">\r\n                            <div className=\"scrollbar-thumb\"\r\n                                style={{ \"left\": 100*scrollPosn/(totalLength) + \"%\",\r\n                                            \"width\": \"calc(\" + 100/zoom + \"% - \" + linesLeft + \"px)\",\r\n                                            \"marginLeft\": linesLeft,\r\n                                            \"opacity\": zoom===1?\"0\":\"1\" }} />\r\n                        </div>\r\n                        <div className=\"timeline-controls\">\r\n                            <div></div>\r\n                            {/* <button className=\"about-button\">\r\n                                <FontAwesomeIcon icon={faInfo} />\r\n                                <span>About</span>\r\n                            </button> */}\r\n                            <div className=\"zoom-info\" title=\"Click and drag or use Alt+Scroll to zoom timelines\">\r\n                                <span zoom={Math.round(zoom*100)}\r\n                                    onMouseMove={(e) => this.state.mouseDown && handleDragToZoom(e)}>\r\n                                    <FontAwesomeIcon icon={faSearch} />\r\n                                    <span>{Math.floor(zoom*100) + \"%\"}</span>\r\n                                </span>\r\n                            </div>\r\n                            {\r\n                                trackPosn >= 0 && (\r\n                                    <button className=\"scale-icon clear-button\" onClick={handleClearState}>\r\n                                        <FontAwesomeIcon icon={faTimes} />\r\n                                        <span>Clear selected</span>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                            { trackPosn === -1 && <div /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","\r\nimport React from 'react';\r\n\r\nimport './App.css';\r\nimport './style/style.css';\r\n\r\nimport source from './data/test-lines.json'\r\nimport Timeline from './components/Timeline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: source,\r\n        };\r\n        this.handleLoadFile = this.handleLoadFile.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleLoadFile(json) {\r\n        this.setState({\r\n            lines: JSON.parse(json),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const lines = this.state.lines;\r\n\r\n        if(lines !== null)\r\n            return (\r\n                <div className=\"App\">\r\n                    <Timeline source={source} />\r\n                </div>\r\n            );\r\n        else return(\r\n            <div className=\"App\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}