{"version":3,"sources":["components/SplashScreen.jsx","components/Timeline.jsx","App.js","reportWebVitals.js","index.js"],"names":["SplashScreen","props","state","files","handleLoadFile","loadFile","bind","newFile","handleChange","e","$","click","this","setState","fileReader","history","FileReader","readAsText","target","onload","result","className","onClick","type","id","onChange","React","Component","Timeline","lines","concat","forEach","line","i","events","event","j","posn","Math","round","random","end","start","selectedEvent","earliestDate","latestDate","disabledArray","Array","length","fill","trackPosn","scrollPosn","zoom","resizeTicker","hasMounted","mouseDown","readyForTrack","handleSelect","totalLength","trackerCoord","allDates","updateTimeline","handleToggleLine","handleTrack","handleSelectEvent","handleClearSelected","handleZoomIn","handleZoomOut","handleScroll","handleSave","handleCopy","renderLoad","fullRender","thisObj","window","addEventListener","undefined","position","linesLeft","left","width","max","indexOf","push","sort","a","b","label","parentElement","getAttribute","buttons","hasClass","getBoundingClientRect","linesWidth","touches","clientX","timeline","setTimeout","preventDefault","stopPropagation","closest","attr","oldZoom","newZoom","min","altKey","shiftKey","deltaY","delta","element","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","style","display","body","appendChild","removeChild","value","select","setSelectionRange","execCommand","trackCoord","onWheel","onMouseDown","onMouseUp","dragging","foggedleft","foggedright","onMouseMove","onTouchMove","map","posnvisible","color","title","checked","tracked","startvisible","endvisible","isselected","icon","faSave","faSearch","floor","faTimesCircle","App","json","parse","newSelected","selectedDisplayText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af993d68.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass SplashScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            files: \"\",\r\n        }\r\n        this.handleLoadFile = props.handleLoadFile;\r\n        this.loadFile = this.loadFile.bind(this);\r\n        this.newFile = this.newFile.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n    }\r\n\r\n    loadFile(e) {\r\n        $(\"#file-input\").click();\r\n    }\r\n\r\n    newFile() {\r\n        this.setState({\r\n            files: \"[]\",\r\n        }, function() { this.handleLoadFile(this.state.files); });\r\n    }\r\n\r\n    handleChange(e) {\r\n        var history = this.state.history;\r\n\r\n        const fileReader = new FileReader();        \r\n        fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n        fileReader.onload = e => {\r\n            this.setState({\r\n                files: e.target.result,\r\n            }, function() {\r\n\r\n                this.handleLoadFile(this.state.files);\r\n            });\r\n        };\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"splash-screen\">\r\n                <h1>Timeline</h1>\r\n                <p>Timeline is a notes app for time-based projects.</p>\r\n\r\n                <div className=\"new-file-prompt\">\r\n                    <h1>Create new file</h1>\r\n                    <button onClick={this.newFile}>Start</button>\r\n                </div>\r\n                <div className=\"load-file-prompt\">\r\n                    <h1>Load from file</h1>\r\n                    <input type=\"file\" id=\"file-input\" onChange={this.handleChange} />\r\n                    <button onClick={this.loadFile}>Choose file</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SplashScreen;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faCopy, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        var lines = props.lines.concat([]);\r\n        lines.forEach(function(line, i) {\r\n            line.events.forEach(function(event, j) {\r\n                event.posn = Math.round(Math.random()*(line.end-line.start) + line.start);\r\n            })\r\n        });\r\n\r\n        this.state = {\r\n            lines: lines,\r\n            selectedEvent: props.selectedEvent,\r\n\r\n            earliestDate: 0,\r\n            latestDate: 0,\r\n            disabledArray: Array(props.lines.length).fill(false),\r\n            \r\n            trackPosn: -1,\r\n            scrollPosn: 0,\r\n            zoom: 1,\r\n            \r\n            resizeTicker: 0,\r\n            hasMounted: false,\r\n            mouseDown: null,\r\n            readyForTrack: true,\r\n        };\r\n\r\n        this.handleSelect = props.handleSelect;\r\n\r\n        this.totalLength = this.totalLength.bind(this);\r\n        this.trackerCoord = this.trackerCoord.bind(this);\r\n        this.allDates = this.allDates.bind(this);\r\n        this.updateTimeline = this.updateTimeline.bind(this);\r\n        this.handleToggleLine = this.handleToggleLine.bind(this);\r\n        this.handleTrack = this.handleTrack.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.handleClearSelected = this.handleClearSelected.bind(this);\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleCopy = this.handleCopy.bind(this);\r\n        \r\n        this.renderLoad = this.renderLoad.bind(this);\r\n        this.fullRender = this.fullRender.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var thisObj = this;\r\n        window.addEventListener('resize', function() {\r\n            const resizeTicker = thisObj.state.resizeTicker;\r\n            thisObj.setState({\r\n                resizeTicker: resizeTicker + 1,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n        this.updateTimeline();\r\n    }\r\n\r\n    totalLength() {\r\n        return (this.state.latestDate-this.state.earliestDate)/this.state.zoom;\r\n    }\r\n\r\n    trackerCoord() {\r\n        if($(\"ul.timeline > .timeline-item > .line-container\").position() !== undefined) {\r\n            const linesLeft = $(\"ul.timeline > .timeline-item > .line-container\").position().left,\r\n                  linesWidth = $(\"ul.timeline > .timeline-item > .line-container\").width();\r\n    \r\n            return 10 + linesWidth*(this.state.trackPosn-Math.max(this.state.earliestDate,this.state.scrollPosn))/this.totalLength() + linesLeft;\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    allDates() {\r\n        var allDates = [];\r\n\r\n        this.state.lines.forEach(function(line) {\r\n            if(allDates.indexOf(line.start) < 0) allDates.push(line.start);\r\n            if(allDates.indexOf(line.end) < 0) allDates.push(line.end);\r\n        });\r\n        allDates.sort((a, b) => a-b);\r\n\r\n        return allDates;\r\n    }\r\n\r\n    updateTimeline() {\r\n        var earliestDate = undefined,\r\n            latestDate = undefined;\r\n        this.state.lines.forEach(function(line) {\r\n            if(earliestDate === undefined) {\r\n                earliestDate = line.start;\r\n                latestDate = line.end;\r\n            }\r\n            else {\r\n                if(line.start < earliestDate) earliestDate = line.start;\r\n                if(line.end > latestDate) latestDate = line.end;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            earliestDate: earliestDate,\r\n            latestDate: latestDate,\r\n        });\r\n    }\r\n\r\n    handleToggleLine(e) {\r\n        var disabledArray = this.state.disabledArray.concat([]);\r\n        this.state.lines.forEach(function(line, i) {\r\n            if(line.label === e.target.parentElement.getAttribute(\"label\"))\r\n                disabledArray[i] = !disabledArray[i];\r\n        })\r\n        this.setState({\r\n            disabledArray: disabledArray,\r\n        });\r\n    }\r\n\r\n    handleTrack(e) {\r\n        var validEventTypes = [\"click\", \"mousedown\", \"mousemove\"];\r\n        if((validEventTypes.indexOf(e.type) >= 0 && e.buttons === 1) ||\r\n           (e.type===\"touchmove\" && this.state.readyForTrack)) {\r\n            if($(e.target).hasClass(\"line-event\")) this.handleSelectEvent(e);\r\n            else {\r\n                const totalLength = this.totalLength(),\r\n                      earliestDate = this.state.earliestDate,\r\n                      latestDate = this.state.latestDate,\r\n                      zoom = this.state.zoom,\r\n                      scrollPosn = this.state.scrollPosn,\r\n                      \r\n                      linesLeft = $(\".timeline > .timeline-item > .line-container > .line-wrapper\")[0].getBoundingClientRect().left,\r\n                      linesWidth = $(\".timeline > .timeline-item > .line-container > .line-wrapper\").width(),\r\n                      linesPadding = 0;\r\n\r\n                var trackPosn = this.state.trackPosn + 0,\r\n                    x = -1;\r\n                    \r\n                if(e.type === 'touchmove') x = e.touches[0].clientX;\r\n                else x = e.clientX;\r\n\r\n                trackPosn = totalLength/zoom*(x-linesLeft-linesPadding)/(linesWidth/zoom)+Math.max(earliestDate, scrollPosn);\r\n                if(trackPosn >= earliestDate && trackPosn <= latestDate) {\r\n                    this.setState({\r\n                        trackPosn: trackPosn,\r\n                        selectedEvent: { timeline: null, event: null },\r\n                        readyForTrack: false,\r\n                    }, function() {\r\n                        let thisObj = this;\r\n                        let setState = () => {thisObj.setState({ readyForTrack: true, })};\r\n                        setTimeout(setState, 0);                    \r\n                        this.handleSelect(this.state.selectedEvent);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\"),\r\n              event = $(e.target).attr(\"label\"),\r\n              trackPosn = $(e.target).attr(\"posn\");\r\n\r\n        this.setState({\r\n            selectedEvent: { timeline: timeline, event: event }, \r\n            trackPosn: trackPosn,\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleClearSelected() {\r\n        this.setState({\r\n            selectedEvent: { timeline: null, event: null, },\r\n            trackPosn: -1,\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleZoomIn() {\r\n        const totalLength = this.totalLength() * this.state.zoom,\r\n              oldZoom = this.state.zoom + 0,\r\n              scrollPosn = this.state.scrollPosn + 0;\r\n        const newZoom = Math.min(2, oldZoom + 0.1);\r\n\r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n\r\n    handleZoomOut() {\r\n        const totalLength = this.totalLength() * this.state.zoom,\r\n              oldZoom = this.state.zoom + 0,\r\n              scrollPosn = this.state.scrollPosn + 0;\r\n        const newZoom = Math.max(1, oldZoom - 0.1);\r\n\r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n\r\n    handleScroll(e) {\r\n        if(e.altKey || e.shiftKey) {\r\n            if(e.altKey) {\r\n                if(e.deltaY > 0) this.handleZoomOut(e);\r\n                else this.handleZoomIn(e);\r\n            }\r\n            else if(e.shiftKey) {\r\n                const scrollPosn = this.state.scrollPosn,\r\n                      zoom = this.state.zoom,\r\n                      earliestDate = this.state.earliestDate,\r\n                      latestDate = this.state.latestDate,\r\n                      delta = (e.deltaY < 0 ? -1 : 1)*zoom*this.totalLength()/20;\r\n                this.setState({\r\n                    scrollPosn: Math.min(latestDate - this.totalLength(), Math.max(earliestDate, scrollPosn + delta)),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave() {\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.state.lines)));\r\n        element.setAttribute('download', \"timeline.json\");\r\n        \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        \r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    handleCopy() {\r\n        var element = document.createElement('input');\r\n        element.setAttribute(\"type\", \"text\");\r\n        element.value = JSON.stringify(this.state.lines);\r\n        document.body.appendChild(element);\r\n        element.select();\r\n        element.setSelectionRange(0, 99999); /* For mobile devices */\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <div className=\"load-spinner\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    fullRender() {\r\n        const selectedEvent = this.state.selectedEvent,\r\n              earliestDate = this.state.earliestDate + this.state.scrollPosn,\r\n              totalLength = this.totalLength(),\r\n              allDates = this.allDates(),\r\n              disabledArray = this.state.disabledArray,\r\n              trackCoord = this.trackerCoord(),\r\n              trackPosn = this.state.trackPosn,\r\n              zoom = this.state.zoom,\r\n              scrollPosn = this.state.scrollPosn,\r\n\r\n              handleToggleLine = this.handleToggleLine,\r\n              handleTrack = this.handleTrack,\r\n              handleClearSelected = this.handleClearSelected,\r\n              handleZoomIn = this.handleZoomIn,\r\n              handleZoomOut = this.handleZoomOut,\r\n              handleScroll = this.handleScroll,\r\n              handleSave = this.handleSave,\r\n              handleCopy = this.handleCopy,\r\n\r\n              linesLeft = $(\"ul.timeline > .timeline-item > .line-container\").position() !== undefined ?\r\n                $(\"ul.timeline > .timeline-item > .line-container\").position().left : 0;\r\n\r\n        return (\r\n            <div className=\"timeline-container\" onWheel={handleScroll}\r\n                 onMouseDown={(e) => this.setState({ mouseDown: e.target, })}\r\n                 onMouseUp={(e) => {this.setState({ mouseDown: null, })}}>\r\n                <ul className=\"timeline\" dragging={this.state.mouseDown !== null ? \"dragging\" : undefined}\r\n                    foggedleft={zoom > 1 && scrollPosn > 0 ? \"foggedleft\" : undefined}\r\n                    foggedright={zoom > 1 && scrollPosn < totalLength ? \"foggedleft\" : undefined}\r\n                    onMouseDown={handleTrack} onMouseMove={handleTrack} onTouchMove={handleTrack}>\r\n                    {\r\n                        trackPosn >= scrollPosn &&\r\n                            <div className=\"timeline-tracker\" posn={trackPosn}\r\n                                 style={{ \"left\": trackCoord + \"px\" }}\r\n                            />\r\n                    }\r\n                    <li className=\"timeline-item ruler-container\">\r\n                        <div />\r\n                        <div />\r\n                        <div className=\"ruler\">\r\n                            <div className=\"ruler-wrapper\">\r\n                                {\r\n                                    allDates.map((posn, i) =>\r\n                                        <div className=\"rule\" posn={posn} key={i}\r\n                                                posnvisible={posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                                style={{ \"left\": 100*(posn - earliestDate)/totalLength + \"%\" }} />\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    {\r\n                        this.state.lines.map((line, i) =>\r\n                            <li className=\"timeline-item\" label={line.label} key={i}\r\n                                style={{ \"color\": line.color, }}>\r\n                                <div className=\"line-label\" title={line.label}>{line.label}</div>\r\n                                <input type=\"checkbox\" className=\"line-toggle\"\r\n                                       label={line.label} style={{ \"backgroundColor\": line.color }}\r\n                                       checked={disabledArray[i] ? undefined : \"checked\"}\r\n                                       onChange={handleToggleLine}/>\r\n                                <div className=\"line-container\" tracked={!(line.start>trackPosn || line.end<trackPosn) || trackPosn===-1 ? \"tracked\" : undefined}>\r\n                                    <div className=\"line-wrapper\"\r\n                                         startvisible={line.start >= scrollPosn ? \"startvisible\" : undefined}\r\n                                         endvisible={line.end <= totalLength*zoom ? \"endvisible\" : undefined}>\r\n                                        <div className=\"line\"\r\n                                             style={{ \"backgroundColor\": line.color,\r\n                                                      \"left\": Math.max(0, 100*(line.start - earliestDate)/totalLength) + \"%\",\r\n                                                      \"width\": Math.max(0, 100*(line.end-Math.max(line.start, scrollPosn))/totalLength) + \"%\" }} />\r\n                                        {\r\n                                            line.events.map((event, j) =>\r\n                                                <div className=\"line-event\" posn={event.posn} label={event.label} key={j}\r\n                                                    posnvisible={event.posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                                    isselected={(line.label===selectedEvent.timeline && event.label===selectedEvent.event) ?\r\n                                                                \"isselected\" : undefined}\r\n                                                    style={{ \"left\": 100*(event.posn - earliestDate)/totalLength + \"%\",\r\n                                                             \"backgroundColor\": line.color, }} />\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <div className=\"timeline-bottom\">\r\n                    <div className=\"timeline-scrollbar\">\r\n                        <div className=\"scrollbar-thumb\"\r\n                            style={{ \"left\": 100*scrollPosn/(totalLength*zoom) + \"%\",\r\n                                        \"width\": \"calc(\" + 100/zoom + \"% - \" + linesLeft + \"px)\",\r\n                                        \"marginLeft\": linesLeft, }} />\r\n                    </div>\r\n                    <div className=\"timeline-controls\">\r\n                        <button className=\"save-button\" onClick={handleSave}>\r\n                            <FontAwesomeIcon icon={faSave} />\r\n                            <span>Save file</span>\r\n                        </button>\r\n                        {/* <button className=\"copy-button\" onClick={handleCopy}>\r\n                            <FontAwesomeIcon icon={faCopy} />\r\n                            <span>Copy JSON</span>\r\n                        </button> */}\r\n                        <span title=\"Use buttons or Alt+Scroll to zoom timelines\">\r\n                            <button className=\"zoom-in\" onMouseDown={handleZoomIn}>+</button>\r\n                            <span zoom={Math.round(this.state.zoom*100)}>\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                                <span>{Math.floor(zoom*100) + \"%\"}</span>\r\n                            </span>\r\n                            <button className=\"zoom-out\" onMouseDown={handleZoomOut}>&minus;</button>\r\n                        </span>\r\n                        {/* <div /> */}\r\n                        {\r\n                            trackPosn >= 0 && (\r\n                                <button className=\"clear-button\" onClick={handleClearSelected}>\r\n                                    <FontAwesomeIcon icon={faTimesCircle} />\r\n                                    <span>Clear selected</span>\r\n                                </button>\r\n                            )\r\n                        }\r\n                        { trackPosn === -1 && <div /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","\r\nimport React from 'react';\r\n\r\nimport './App.css';\r\nimport './style/style.css';\r\n\r\nimport lines from './data/test-lines.json'\r\n\r\nimport SplashScreen from './components/SplashScreen';\r\nimport Timeline from './components/Timeline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lines: lines,\r\n            selectedEvent: { timeline: null, event: null, },\r\n        }\r\n        this.handleLoadFile = this.handleLoadFile.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.fullRender = this.fullRender.bind(this);\r\n        this.renderLoad = this.renderLoad.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleLoadFile(json) {\r\n        this.setState({\r\n            lines: JSON.parse(json),\r\n        });\r\n    }\r\n\r\n    handleSelect(newSelected) {\r\n        this.setState({\r\n            selectedEvent: newSelected,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.lines !== null) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    fullRender() {\r\n        const lines = this.state.lines,\r\n              selectedEvent = this.state.selectedEvent;\r\n        var selectedDisplayText = \"\";\r\n        if(lines !== undefined && selectedEvent.event !== null)\r\n            lines.forEach(function(line, i) {\r\n                line.events.forEach(function(event, j) {\r\n                    if(line.label===selectedEvent.timeline &&\r\n                        event.label===selectedEvent.event)\r\n                        selectedDisplayText = JSON.stringify(line);\r\n                });\r\n            });\r\n\r\n        return(\r\n            <div className=\"App\">\r\n                <Timeline lines={lines} selectedEvent={this.state.selectedEvent} handleSelect={this.handleSelect} />\r\n                <div className=\"blur\" />\r\n                <div className=\"displaySelected\">{selectedDisplayText}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLoad() {\r\n        return(\r\n            <div className=\"App\">\r\n                <SplashScreen handleLoadFile={this.handleLoadFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}