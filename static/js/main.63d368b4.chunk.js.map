{"version":3,"sources":["components/Breadcrumbs.jsx","components/TimelineItemList.jsx","components/overlays/MainOverlay.jsx","components/overlays/SearchOverlay.jsx","components/Timeline.jsx","App.js","reportWebVitals.js","index.js"],"names":["Breadcrumbs","props","state","item","handleSelect","handleSelectTimeline","this","setState","className","onClick","icon","faHashtag","faChevronRight","type","timeline","style","color","React","Component","TimelineItemList","list","label","showDetails","bind","handleSelectEvent","toggleDetails","e","timelineLabel","$","target","closest","attr","eventLabel","checked","length","faEye","faEyeSlash","map","i","tabIndex","timelinelabel","eventlabel","event","borderLeftColor","blurb","start","end","generateList","source","timelineFilter","eventFilter","sort","a","b","results","Object","values","timelines","forEach","push","translateTimeline","events","filter","indexOf","translateEvent","undefined","notes","obj","MainOverlay","selectedTimeline","selectedObject","selectedEvent","hasMounted","handleGoToProjectRoot","hasClass","fullRender","renderLoad","allChildren","getAllChildren","console","log","SearchOverlay","searchString","typeFilters","handleSearch","handleFilter","value","val","types","forceUpdate","allItems","getAllItems","id","name","placeholder","onChange","toLowerCase","join","Timeline","handleZoomIn","handleZoom","handleZoomOut","toggleMenu","setOverlay","overlay","openNavigation","openSearch","toggleFullscreen","fullscreen","earliestDate","latestDate","key","posn","Math","round","random","disabledArray","Array","fill","trackPosn","scrollPosn","zoom","mouseDown","readyForTrack","minWidth","width","maxWidth","minHeight","height","maxHeight","aspectRatio","isTracked","handleToggleLine","handleTrack","handleScroll","handleDragToZoom","handleClearState","handleKeyPress","handleSaveToFile","handleCopyAsJSON","thisObj","window","addEventListener","resizeTicker","canvas","position","component","totalLength","boundsAndLength","left","parseInt","css","coord","lineWrapper","linesLeft","getBoundingClientRect","componentLeft","linesWidth","max","min","line","overlayPipeline","callback","delta","oldZoom","newZoom","movementX","altKey","shiftKey","deltaY","is","buttons","snapToEvent","x","touches","clientX","coordToPosn","setTimeout","concat","closeOverlay","element","document","createElement","setAttribute","encodeURIComponent","JSON","stringify","display","body","appendChild","click","removeChild","select","setSelectionRange","execCommand","styleProps","trackCoord","posnToCoord","allUniqueDates","theme","onMouseDown","onMouseUp","onKeyDown","faBars","faTimes","faCompress","faExpand","onMouseMove","expanded","isopen","faSearch","faFolderOpen","faFileDownload","faClipboard","dragging","onWheel","disabled","tracked","title","stroke","y1","y2","x1","x2","j","cy","cx","onMouseOver","onMouseOut","y","rx","ry","dominantBaseline","textAnchor","floor","result","selectedTimelineLabel","selectedEventLabel","datesList","App","handleLoadFile","json","lines","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63d368b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { faChevronRight, faHashtag } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Breadcrumbs extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        this.state = {\r\n            item: props.item,\r\n        };\r\n\r\n        this.handleSelect = props.handleSelect;\r\n        this.handleSelectTimeline = props.handleSelectTimeline;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            item: props.item,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const item = this.state.item, \r\n            handleSelectTimeline = this.handleSelectTimeline,\r\n            goToRoot = () => this.handleSelect(null, null, \"main\");\r\n\r\n\r\n        return (\r\n            <div className=\"parent-label\">\r\n                <span className=\"link-button\" onClick={goToRoot}>\r\n                    <FontAwesomeIcon icon={faHashtag} />\r\n                    PROJECT\r\n                </span>\r\n                <FontAwesomeIcon icon={faChevronRight} />\r\n\r\n                {\r\n                    item.type === \"event\" &&\r\n                        <span className=\"link-button\" timeline={item.timeline}\r\n                            style={{color: item.color}}\r\n                            onClick={handleSelectTimeline}>\r\n                            {item.timeline}\r\n                        </span>\r\n                }\r\n                {\r\n                    item.type === \"event\" && <FontAwesomeIcon icon={faChevronRight} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Breadcrumbs;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash, } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\nclass TimelineItemList extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        this.state = {\r\n            list: props.list,\r\n            label: props.label,\r\n            showDetails: true,\r\n        };\r\n\r\n        this.handleSelect= props.handleSelect;\r\n        this.handleSelectTimeline = this.handleSelectTimeline.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.toggleDetails = this.toggleDetails.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            list: props.list,\r\n        })\r\n    }\r\n\r\n    handleSelectTimeline(e) {\r\n        let timelineLabel = \"\";\r\n        timelineLabel = $(e.target).closest(\".list-item\").attr(\"timelinelabel\");\r\n\r\n        this.handleSelect(timelineLabel, null, \"main\");\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        let timelineLabel = \"\",\r\n            eventLabel = \"\";\r\n        timelineLabel = $(e.target).closest(\".list-item\").attr(\"timelinelabel\");\r\n        eventLabel = $(e.target).closest(\".list-item\").attr(\"eventlabel\");\r\n\r\n        this.handleSelect(timelineLabel, eventLabel, \"main\");\r\n    }\r\n\r\n    toggleDetails(e) {\r\n        const checked = this.state.showDetails;\r\n        this.setState({\r\n            showDetails: !checked,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails, \r\n            { handleSelect, handleSelectTimeline, handleSelectEvent, toggleDetails } = this;\r\n\r\n        return (\r\n            <div className=\"timeline-item-list\">\r\n                <header className=\"list-header\">\r\n                    <div className=\"list-item-count\">{`${this.state.list.length} ${this.state.label}...`}</div>\r\n                    <button className=\"list-detail-toggle\" onClick={toggleDetails}>\r\n                        <FontAwesomeIcon icon={showDetails?faEye:faEyeSlash} />\r\n                        {` Show details?`}\r\n                    </button>\r\n                </header>\r\n                <ul className=\"list-body\">\r\n                    {\r\n                        this.state.list.map((item, i) =>\r\n                            <li className=\"list-item\" key={i} tabIndex=\"0\"\r\n                                timelinelabel={item.timeline} eventlabel={item.event}>\r\n                                <div className=\"item-summary-cell\"\r\n                                    style={{borderLeftColor: item.type===\"timeline\"?item.color:\"transparent\"}}>\r\n                                    <Breadcrumbs item={item}\r\n                                        handleSelect={handleSelect}\r\n                                        handleSelectTimeline={handleSelectTimeline} />\r\n                                    <div className=\"item-label link-button\"\r\n                                        onClick={item.type===\"timeline\"?handleSelectTimeline:handleSelectEvent}>\r\n                                        {item.label}\r\n                                    </div>\r\n                                    {\r\n                                        showDetails && <div className=\"item-notes\">{item.blurb}</div>\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        item.type === \"timeline\" &&\r\n                                            <div>\r\n                                                {item.start} &#8211; {item.end}\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction generateList(source = [], timelineFilter = ()=> true, eventFilter = () => true, sort = (a, b) => 0 ) {\r\n    let results = [];\r\n\r\n    Object.values(source.timelines).forEach(timeline => {\r\n        if(timelineFilter(timeline))\r\n            results.push(translateTimeline(timeline));\r\n        Object.values(source.events).filter(\r\n            event => event.timelines.indexOf(timeline.label) >= 0\r\n        ).forEach(event => {\r\n            if(eventFilter(event))\r\n                results.push(translateEvent(event, timeline));\r\n        });\r\n    });\r\n    \r\n\r\n    results.sort(sort);\r\n\r\n    return results;\r\n}\r\n\r\nfunction translateItem(item, timeline) {\r\n    if(item.type === \"timeline\") return translateTimeline(item);\r\n    else return translateEvent(item, timeline);\r\n}\r\n\r\nfunction translateTimeline(timeline) {\r\n    return {\r\n        type: \"timeline\",\r\n        timeline: timeline.label,\r\n        event: undefined,\r\n        label: timeline.label,\r\n        blurb: timeline.notes,\r\n        start: timeline.start,\r\n        end: timeline.end,\r\n        obj: timeline,\r\n        color: timeline.color,\r\n    }\r\n}\r\n\r\nfunction translateEvent(event, timeline) {\r\n    return {\r\n        type: \"event\",\r\n        timeline: timeline.label,\r\n        event: event.label,\r\n        label: event.label,\r\n        blurb: event.notes,\r\n        obj: event,\r\n        color: timeline.color,\r\n    }\r\n}\r\n\r\nexport { TimelineItemList, generateList, translateItem };","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { TimelineItemList, generateList, translateItem } from '../TimelineItemList';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\n\r\nclass MainOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: props.source,\r\n            selectedTimeline: props.selectedObject.timeline,\r\n            selectedEvent: props.selectedObject.event,\r\n\r\n            hasMounted: false,\r\n        };\r\n\r\n        this.handleSelect = props.handleSelect;\r\n        \r\n        this.handleGoToProjectRoot = this.handleGoToProjectRoot.bind(this);\r\n        this.handleSelectTimeline = this.handleSelectTimeline.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            source: props.source,\r\n            selectedTimeline: props.selectedObject.timeline,\r\n            selectedEvent: props.selectedObject.event,\r\n        });\r\n    }\r\n\r\n    get getAllChildren() {\r\n        const { selectedTimeline, selectedEvent, } = this.state,\r\n            sort = (a, b) => a > b;\r\n\r\n        console.log(selectedTimeline);\r\n        \r\n        if(selectedTimeline === null)\r\n            return generateList(this.state.source, () => true, () => false, sort);\r\n        else if(selectedTimeline !== null && selectedEvent === null)\r\n            return generateList(this.state.source, () => false, (event) => event.timelines.indexOf(selectedTimeline.label) >= 0, sort);\r\n    }\r\n\r\n    handleGoToProjectRoot(e) {\r\n        this.handleSelect(null);\r\n    }\r\n\r\n    handleSelectTimeline(e) {\r\n        let timelineLabel = $(e.target).closest(\"[timeline]\").attr(\"timeline\");\r\n\r\n        this.handleSelect(timelineLabel);\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        let eventLabel = \"\";\r\n        if($(e.target).hasClass(\"event-select\"))\r\n            eventLabel = $(e.target).attr(\"value\");\r\n        else\r\n            eventLabel = $(e.target).closest(\".list-item\").attr(\"value\");\r\n\r\n        this.handleSelect(this.state.selectedTimeline.label, eventLabel);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return <div></div>\r\n    }\r\n\r\n    fullRender() {\r\n        const { selectedTimeline, selectedEvent } = this.state,\r\n              handleSelect = this.handleSelect,\r\n              handleSelectTimeline = this.handleSelectTimeline;\r\n        \r\n        let allChildren = this.getAllChildren,\r\n            selectedObject = this.state.selectedEvent ?? this.state.selectedTimeline ?? this.state.source;\r\n        if(selectedTimeline !== null) selectedObject.timeline = selectedTimeline.label;\r\n\r\n        return (\r\n            <div className=\"main-overlay\">\r\n                {\r\n                    selectedObject.type !== \"project\" &&\r\n                        <Breadcrumbs item={translateItem(selectedObject, selectedTimeline)}\r\n                            handleSelect={handleSelect}\r\n                            handleSelectTimeline={handleSelectTimeline} /> \r\n                }\r\n                <div className=\"notes-section\">\r\n                    <div className=\"selected-label\">{ selectedObject.label }</div>\r\n                    <div className=\"selected-notes\">{ selectedObject.notes }</div>\r\n                </div>\r\n                <div className=\"hr\" />\r\n                {\r\n                    selectedEvent===null &&\r\n                        <TimelineItemList\r\n                            list={allChildren}\r\n                            label=\"children\"\r\n                            handleSelect={handleSelect} /> }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainOverlay;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { TimelineItemList, generateList } from '../TimelineItemList';\r\n\r\nclass SearchOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: props.source,\r\n            searchString: \"\",\r\n            typeFilters: [\"timeline\", \"event\"],\r\n\r\n            hasMounted: false,\r\n        };\r\n\r\n        this.handleSelect = props.handleSelect;\r\n\r\n        this.handleSelectTimeline = this.handleSelectTimeline.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            source: props.source,\r\n        });\r\n    }\r\n\r\n    get getAllItems() {\r\n        const searchString = this.state.searchString.toLowerCase(),\r\n            timelineFilter = timeline =>\r\n                timeline.label.toLowerCase().indexOf(searchString) >= 0 ||\r\n                timeline.notes.toLowerCase().indexOf(searchString) >= 0,\r\n            eventFilter = event =>\r\n                event.timelines.join(\"\").toLowerCase().indexOf(searchString) >= 0 ||\r\n                event.label.toLowerCase().indexOf(searchString) >= 0 ||\r\n                event.notes.toLowerCase().indexOf(searchString) >= 0,\r\n            sort = (a, b) => {\r\n                if(a.obj.label > b.obj.label || (b.type===\"timeline\" && a.type===\"event\"))\r\n                    return 1;\r\n                if(b.obj.label > a.obj.label || (a.type===\"timeline\" && b.type===\"event\"))\r\n                    return -1;\r\n                return 0;\r\n            };\r\n        \r\n        \r\n        let results = generateList(this.state.source, timelineFilter, eventFilter, sort);\r\n\r\n        return results;\r\n    }\r\n\r\n    handleSelectTimeline(e) {\r\n        let timelineLabel = \"\";\r\n        timelineLabel = $(e.target).closest(\".search-results-item\").attr(\"timelinelabel\");\r\n\r\n        this.handleSelect(timelineLabel, null, \"main\");\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        let timelineLabel = \"\",\r\n            eventLabel = \"\";\r\n        timelineLabel = $(e.target).closest(\".search-results-item\").attr(\"timelinelabel\");\r\n        eventLabel = $(e.target).closest(\".search-results-item\").attr(\"eventlabel\");\r\n\r\n        this.handleSelect(timelineLabel, eventLabel, \"main\");\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState({searchString: e.target.value});\r\n    }\r\n\r\n    handleFilter(e) {\r\n        const val = e.target.value;\r\n        \r\n        let types = [\"timeline\", \"event\"];\r\n        if(val === \"Timelines only\") types = [\"timeline\"];\r\n        if(val === \"Events only\") types = [\"event\"];\r\n\r\n        this.setState({typeFilters: types});\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return <div></div>\r\n    }\r\n\r\n    fullRender() {\r\n        const { searchString, typeFilters } = this.state,\r\n            { handleSelect, handleSearch, handleFilter } = this,\r\n            \r\n            allItems = this.getAllItems.filter(item => {\r\n                return typeFilters.indexOf(item.type) >= 0\r\n            });\r\n        \r\n        return (\r\n            <div className=\"search-overlay\">\r\n                <datalist id=\"results\">\r\n                    {\r\n                        allItems.map((item, i) => <option key={i} value={item.label} />)\r\n                    }\r\n                </datalist>\r\n                <div className=\"search-controls\">\r\n                    <input className=\"search-field\"\r\n                        name=\"search-field\" list=\"results\"\r\n                        value={searchString} placeholder=\"Search...\"\r\n                        onChange={handleSearch} />\r\n                    <select className=\"search-filter\" onChange={handleFilter}>\r\n                        <option value=\"Timelines & Events\">Timelines & Events</option>\r\n                        <option value=\"Timelines only\">Timelines only</option>\r\n                        <option value=\"Events only\">Events only</option>\r\n                    </select>\r\n                </div>\r\n                <TimelineItemList list={allItems} handleSelect={handleSelect} label=\"results\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchOverlay;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFolderOpen, faClipboard, faBars, faInfo, faSearch, faTimes, faEye, faEyeSlash, faExpand, faCompress, faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport {  } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport MainOverlay from './overlays/MainOverlay';\r\nimport SearchOverlay from './overlays/SearchOverlay';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {  \r\n        super(props);\r\n\r\n        const source = props.source;\r\n        Object.values(source.events).forEach(function(event, i) {\r\n            const timelines = event.timelines.map(key => source.timelines[key]);\r\n            let earliestDate, latestDate;\r\n            timelines.forEach(function(val, i) {\r\n                if(i == 0) {\r\n                    earliestDate = val.start;\r\n                    latestDate = val.end;\r\n                    return;\r\n                }\r\n                if(val.start < earliestDate) return (earliestDate = val.start);\r\n                if(val.start > latestDate) return (latestDate = val.start);\r\n            });\r\n\r\n            event.posn = Math.round(Math.random()*(latestDate-earliestDate) + earliestDate);\r\n        });\r\n\r\n        this.state = {\r\n            source: source,\r\n            selectedTimeline: null,\r\n            selectedEvent: null,\r\n            overlay: \"none\",\r\n            fullscreen: false,\r\n            \r\n            disabledArray: Array(props.source.length).fill(false),\r\n            trackPosn: -1,\r\n            scrollPosn: 0,\r\n            zoom: 1,\r\n            \r\n            hasMounted: false,\r\n            mouseDown: null,\r\n            readyForTrack: true,\r\n\r\n            // Component props\r\n            minWidth: props.minWidth,\r\n            width: props.width,\r\n            maxWidth: props.maxWidth,\r\n            minHeight: props.minHeight,\r\n            height: props.height,\r\n            maxHeight: props.maxHeight,\r\n            aspectRatio: props.aspectRatio,\r\n        };\r\n        \r\n        this.isTracked = this.isTracked.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleSelectTimeline = this.handleSelectTimeline.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.handleToggleLine = this.handleToggleLine.bind(this);\r\n        this.handleTrack = this.handleTrack.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n        this.handleDragToZoom = this.handleDragToZoom.bind(this);\r\n        this.handleClearState = this.handleClearState.bind(this);\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.handleSaveToFile = this.handleSaveToFile.bind(this);\r\n        this.handleCopyAsJSON = this.handleCopyAsJSON.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let thisObj = this;\r\n        window.addEventListener('resize', function() {\r\n            const resizeTicker = thisObj.state.resizeTicker;\r\n            thisObj.setState({\r\n                resizeTicker: (resizeTicker ?? 0) + 1,\r\n            });\r\n        });\r\n        this.setState({\r\n            hasMounted: true,\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                Complex Getter Functions                                //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Finds the selected Timeline and Event objects from their labels\r\n     * @returns {object} an object containing selectedTimeline and selectedEvent (both defaulting to null)\r\n     */\r\n    get selectedObject() {\r\n        let result = {timeline: null, event: null, };\r\n        const { source, selectedTimeline: selectedTimelineLabel, selectedEvent: selectedEventLabel } = this.state;\r\n        if(selectedTimelineLabel === null) return result;\r\n\r\n        result.timeline = source.timelines[selectedTimelineLabel];\r\n        if(selectedEventLabel === null) return result;\r\n\r\n        result.event = source.events[selectedEventLabel];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a sorted array of unique numbers representing the start and end dates of all Timelines\r\n     * @returns {Array<number>} Sorted array of unique numbers representing the start and end dates of all Timelines \r\n     */\r\n    get allUniqueDates() {\r\n        let datesList = [];\r\n        Object.values(this.state.source.timelines).forEach(function(line) {\r\n            if(!(line.start in datesList)) datesList.push(line.start);\r\n            if(!(line.end in datesList)) datesList.push(line.end);\r\n        });\r\n        datesList.sort((a, b) => a-b);\r\n        return datesList;\r\n    }\r\n\r\n    /**\r\n     * Finds the earliest date, latest date, and total length between all Timelines\r\n     * @returns {object} an object containing earliestDate, latestDate, and totalLength\r\n     */\r\n    get boundsAndLength() {\r\n        let earliestDate = undefined,\r\n            latestDate = undefined;\r\n        Object.values(this.state.source.timelines).forEach(function(line) {\r\n            if(earliestDate === undefined) {\r\n                earliestDate = line.start;\r\n                latestDate = line.end;\r\n            }\r\n            else {\r\n                if(line.start < earliestDate) earliestDate = line.start;\r\n                if(line.end > latestDate) latestDate = line.end;\r\n            }\r\n        });\r\n\r\n        return {\r\n            earliestDate: earliestDate,\r\n            latestDate: latestDate,\r\n            totalLength: (latestDate-earliestDate),\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translates a position on the timeline to the appropriate position in relation to the DOM \r\n     * @param {number} posn - the timeline posn to use as a reference\r\n     * @returns {number} the cooresponding x-coordinate of the position in pixels\r\n     */\r\n    posnToCoord(posn) {\r\n        const canvas = $(\"ul.timeline > .timeline-item > .line-container\");\r\n        if(canvas.position() === undefined) return 0;\r\n    \r\n        const component = $(\".timeline\");\r\n        const { scrollPosn, zoom } = this.state,\r\n            totalLength = this.boundsAndLength.totalLength,\r\n            canvasLeft = canvas.position().left,\r\n            componentLeft = component.position().left,\r\n            paddingOffset = parseInt(canvas.css(\"padding-left\")),\r\n            canvasWidth = canvas.width();\r\n\r\n        return (canvasLeft - componentLeft + paddingOffset - 2)     // Base value (lowest possible)\r\n            + canvasWidth*((posn - scrollPosn)/(totalLength/zoom)); // Portion of the canvas SVG's width                                                    // \r\n    }\r\n\r\n    /**\r\n     * Translates a coordinate in relation to the DOM to a position on the timeline \r\n     * @param {number} coord - the x-coordinate to use as a reference\r\n     * @returns {number} the correspdoning position on the timeline\r\n     */\r\n    coordToPosn(coord) {\r\n        const component = $(\".timeline\"),\r\n            lineWrapper = $(\".timeline > .timeline-item > .line-container > .line-wrapper\");\r\n        const { zoom, scrollPosn } = this.state,\r\n              { earliestDate, latestDate, totalLength } = this.boundsAndLength,\r\n              linesLeft = lineWrapper[0].getBoundingClientRect().left,\r\n              componentLeft = component.position().left,\r\n              linesWidth = lineWrapper.width();\r\n\r\n        return Math.max(earliestDate, Math.min(latestDate,\r\n            (totalLength/zoom**2)*(coord - (linesLeft - componentLeft))/(linesWidth/zoom) + Math.max(earliestDate, scrollPosn)));\r\n    }\r\n\r\n    /**\r\n     * Is the current tracker position within the bounds of the given line? \r\n     * @param {Object} line - the x-coordinate to use as a reference\r\n     * @returns {boolean} whether the given line is currently tracked\r\n     */\r\n     isTracked(line) {\r\n        const trackPosn = this.state.trackPosn;\r\n        return !(line.start>trackPosn || line.end<trackPosn) || trackPosn===-1;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                    Timeline Controls                                   //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * Handles the selecting of Timeline or Event objects\r\n     * @param {string} timelineLabel - the label of the selected Timeline or the Timeline of the selected Object\r\n     * @param {string} eventLabel - the label of the selected Event (defaults to null)\r\n     * @param {string} overlayPipeline - the label of the overlay that should be shown on-selection (defaults to the current overlay)\r\n     * @param {function} callback - the callback that should be called on-selection (defaults to an empty function)\r\n     */\r\n    handleSelect(timelineLabel, eventLabel = null, overlayPipeline = this.state.overlay, callback = () => {}) {\r\n        this.setState({\r\n            selectedTimeline: timelineLabel,\r\n            selectedEvent: eventLabel,\r\n            overlay: overlayPipeline,\r\n        }, callback());\r\n    }\r\n    /**\r\n     * Handles the selection of Timelines\r\n     * @param {event} e - the event that initated the selection; used for identifying the selected Timeline\r\n     * @helper {@link Timeline#handleSelect}\r\n     */\r\n    handleSelectTimeline(e) {\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\");\r\n        this.handleSelect(timeline, null, \"main\");\r\n    }\r\n    /**\r\n     * Handles the selection of Events\r\n     * @param {event} e - the event that initated the selection; used for identifying the selected Event\r\n     * @helper {@link Timeline#handleSelect}\r\n     */\r\n    handleSelectEvent(e) {\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\"),\r\n              event = $(e.target).attr(\"label\");\r\n\r\n        this.handleSelect(timeline, event, \"main\");\r\n    }\r\n\r\n    /**\r\n     * Handles zooming the Timelines view in or out\r\n     * @param {number} delta - the degree, positive or negative, to which the view should be zoomed in\r\n     */\r\n    handleZoom(delta) {\r\n        const { zoom: oldZoom, scrollPosn } = this.state;\r\n        const { totalLength } = this.boundsAndLength,\r\n              newZoom = Math.max(1, Math.min(2, oldZoom + delta));\r\n            \r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n    /**\r\n     * Handles zooming the Timelines view in\r\n     * @helper {@link Timeline#handleZoom}\r\n     */\r\n    handleZoomIn = () => this.handleZoom(0.1);\r\n    /**\r\n     * Handles zooming the Timelines view out\r\n     * @helper {@link Timeline#handleZoom}\r\n     */\r\n    handleZoomOut = () => this.handleZoom(-0.1);\r\n\r\n    /**\r\n     * Handles zooming in and out by dragging horizontally on the zoom indicator\r\n     * @param {event} e - the event that initated the zoom; used for identifying intended zoom direction\r\n     * @helper {@link Timeline#handleZoomIn}\r\n     * @helper {@link Timeline#handleZoomOut}\r\n     */\r\n    handleDragToZoom(e) {\r\n        if(e.movementX > 0) this.handleZoomIn();\r\n        if(e.movementX < 0) this.handleZoomOut();\r\n    }\r\n\r\n    /**\r\n     * Handles the zooming and horizontal scrolling of the Timeline view\r\n     * @param {event} e - the event that initated the scroll; used for identifying intended action\r\n     * @helper {@link Timeline#handleZoomIn}\r\n     * @helper {@link Timeline#handleZoomOut}\r\n     */\r\n    handleScroll(e) {\r\n        if(!e.altKey && !e.shiftKey) return;\r\n        \r\n        if(e.altKey) {\r\n            if(e.deltaY > 0) return this.handleZoomOut(e);\r\n            else return this.handleZoomIn(e);\r\n        }\r\n        else if(e.shiftKey) {\r\n            const { scrollPosn, zoom } = this.state,\r\n                  { earliestDate, latestDate, totalLength } = this.boundsAndLength;\r\n            const delta = (e.deltaY < 0 ? -1 : 1)*totalLength/20;\r\n            \r\n            this.setState({\r\n                scrollPosn: Math.min(latestDate - totalLength/zoom, Math.max(earliestDate, scrollPosn + delta)),\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the snapping of the tracker to Events in the Timelines view\r\n     * @param {event} e - the event that initated the tracking; used for identifying the snapped Event\r\n     */\r\n    snapToEvent(e) {\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\"),\r\n              event = $(e.target).attr(\"label\"),\r\n              trackPosn = $(e.target).attr(\"posn\");\r\n            \r\n        this.setState({\r\n            trackPosn: trackPosn,\r\n        }, this.handleSelect(timeline, event));\r\n    }\r\n    /**\r\n     * Handles tracking in the Timelines view\r\n     * @param {event} e - the event that initated the tracking; used for identifying the tracking position\r\n     * @helper {@link Timeline#snapToEvent}\r\n     */\r\n    handleTrack(e) {\r\n        let validEventTypes = [\"click\", \"mousedown\", \"mousemove\", \"touchmove\"];\r\n        if($(e.target).is(\".timeline-bottom *\") ||\r\n            validEventTypes.indexOf(e.type) < 0 ||\r\n            (e.type===\"touchmove\" && !this.state.readyForTrack) ||\r\n            e.buttons !== 1) return;\r\n        if($(e.target).hasClass(\"line-event\")) return this.snapToEvent(e);\r\n\r\n        const x = e.type === 'touchmove' ?\r\n                  e.touches[0].clientX :\r\n                  e.clientX;\r\n        \r\n        let trackPosn = this.coordToPosn(x);\r\n        this.setState({\r\n            trackPosn: trackPosn,\r\n            readyForTrack: false,\r\n        }, function() {\r\n            let thisObj = this;\r\n            let setState = () => {thisObj.setState({ readyForTrack: true, })};\r\n            setTimeout(setState, 0);                    \r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles toggling a Timeline on and off in the Timelines view\r\n     * @param {event} e - the event that initated the toggling; used for identifying the toggled Timeline\r\n     */\r\n    handleToggleLine(e) {\r\n        let disabledArray = this.state.disabledArray.concat([]);\r\n        Object.values(this.state.source.timelines).forEach(function(line, i) {\r\n            if(line.label === $(e.target).closest(\".timeline-item\").attr(\"label\"))\r\n                disabledArray[i] = !disabledArray[i];\r\n        })\r\n        this.setState({\r\n            disabledArray: disabledArray,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles reseting the selected Timeline and Event objects, the tracker, and the overlay \r\n     */\r\n    handleClearState() {\r\n        if(this.state.overlay !== \"none\") this.closeOverlay();\r\n        else this.setState({\r\n            trackPosn: -1,\r\n            selectedTimeline: null,\r\n            selectedEvent: null,\r\n            zoom: 1,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles key presses\r\n     * @param {event} e - the keyboard event; used for identifying the intended action\r\n     */\r\n    handleKeyPress(e) {\r\n        if(e.key === \"Escape\") {\r\n            if(this.state.fullscreen) this.toggleFullscreen();\r\n            else this.handleClearState();\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                      Menu Methods                                      //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * Sets the overlay that should be displayed on top of the Timelines view\r\n     * @param {string} overlay - the label of the overlay that should be displayed\r\n     */\r\n    setOverlay(overlay) {\r\n        this.setState({\r\n            overlay: overlay,\r\n        });\r\n    }\r\n    /**\r\n     * Opens the menu overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n    toggleMenu = () => this.setOverlay(this.state.overlay===\"none\"?\"menu\":\"none\");\r\n    /**\r\n     * Opens the navigation overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n    openNavigation = () => this.setOverlay(\"main\");\r\n    /**\r\n     * Opens the search overlay\r\n     * @helper {@link Timeline#setOverlay}\r\n     */\r\n     openSearch = () => this.setOverlay(\"search\");\r\n\r\n    toggleFullscreen = () => this.setState({\r\n        fullscreen: !this.state.fullscreen,\r\n    });\r\n    \r\n    /**\r\n     * Saves the list of Timelines and Events to a .JSON file\r\n     */\r\n    handleSaveToFile() {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.state.source)));\r\n        element.setAttribute('download', \"timeline.json\");       \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    /**\r\n     * Copies the list of Timelines and Events to the clipboard as a JSON object\r\n     */\r\n    handleCopyAsJSON() {\r\n        let element = document.createElement('input');\r\n        element.setAttribute(\"type\", \"text\");\r\n        element.value = JSON.stringify(this.state.source);\r\n        document.body.appendChild(element);\r\n        element.select();\r\n        element.setSelectionRange(0, 99999); /* For mobile devices */\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n    //                                                                                        //\r\n    //                                     Render Methods                                     //\r\n    //                                                                                        //\r\n    ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Renders the component\r\n     * @helper {@link Timeline#renderLoad}\r\n     * @helper {@link Timeline#fullRender}\r\n     */\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        return this.renderLoad();\r\n    }\r\n\r\n    /**\r\n     * Renders the unmounted component with a loading animation\r\n     */\r\n    renderLoad() {\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <div className=\"load-spinner\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Renders the mounted component\r\n     */\r\n    fullRender() {\r\n              // Get all necessary values from the state\r\n        const { source, selectedTimeline, selectedEvent, overlay, disabledArray, mouseDown, zoom, scrollPosn, trackPosn } = this.state,\r\n              styleProps = {\r\n                  minWidth: this.state.minWidth,\r\n                  width: this.state.width,\r\n                  maxWidth: this.state.maxWidth,\r\n                  minHeight: this.state.minHeight,\r\n                  height: this.state.height,\r\n                  maxHeight: this.state.maxHeight,\r\n                  aspectRatio: this.state.aspectRatio,\r\n              },\r\n\r\n              // Get all necessary values from complex getters\r\n              earliestDate = this.boundsAndLength.earliestDate + this.state.scrollPosn,\r\n              totalLength = this.boundsAndLength.totalLength,\r\n              selectedObject = this.selectedObject,\r\n              trackCoord = this.posnToCoord(this.state.trackPosn),\r\n              allUniqueDates = this.allUniqueDates,\r\n              isTracked = this.isTracked,\r\n              \r\n              // Get all necessary timeline control methods\r\n              handleSelect = this.handleSelect,\r\n              handleSelectTimeline = this.handleSelectTimeline,\r\n              handleScroll = this.handleScroll,\r\n              handleDragToZoom = this.handleDragToZoom,\r\n              handleToggleLine = this.handleToggleLine,\r\n              handleTrack = this.handleTrack,\r\n              handleClearState = this.handleClearState,\r\n              handleKeyPress = this.handleKeyPress,\r\n              \r\n              // Get all necessary menu methods\r\n              toggleFullscreen = this.toggleFullscreen,\r\n              toggleMenu = this.toggleMenu,\r\n              openNavigation = this.openNavigation,\r\n              openSearch = this.openSearch,\r\n              handleSaveToFile = this.handleSaveToFile,\r\n              handleCopyAsJSON = this.handleCopyAsJSON,\r\n\r\n              // Get all necessary DOM-based values\r\n              linesLeft = $(\"ul.timeline > .timeline-item > .line-container\").position()?.left ?? 0;\r\n        \r\n        return (\r\n            <div className=\"timeline-container\" theme={\"light\"} style={styleProps} tabIndex=\"0\"\r\n                 fullscreen={this.state.fullscreen===true?\"fullscreen\":undefined}\r\n                 onMouseDown={(e) => this.setState({ mouseDown: e.target, })}\r\n                 onMouseUp={(e) => {this.setState({ mouseDown: null, })}}\r\n                 onKeyDown={handleKeyPress} >\r\n                <header className=\"timeline-container-header\">\r\n                    <button className=\"menu-button\" onClick={toggleMenu}>\r\n                        <FontAwesomeIcon icon={this.state.overlay===\"none\"?faBars:faTimes} />\r\n                        <span>{this.state.overlay===\"none\"?\"Menu\":\"Close\"}</span>\r\n                    </button>\r\n                    <div className=\"project-title\">Project Timelines</div>\r\n                    <button className=\"expand-collapse-button\" onClick={toggleFullscreen}>\r\n                        <FontAwesomeIcon icon={this.state.fullscreen===true?faCompress:faExpand} />\r\n                        <span>{this.state.fullscreen===true?\"Collapse\":\"Expand\"}</span>\r\n                    </button>\r\n                </header>\r\n                <div className=\"timeline-container-body\" onMouseMove={handleTrack}>\r\n                    <div className=\"overlay-layer\" expanded={overlay!==\"none\" ? \"expanded\" : undefined}>\r\n                        {\r\n                            overlay !== \"none\" &&\r\n                                <ul className=\"menu-overlay\">\r\n                                    <li className=\"search-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        isopen={overlay===\"search\"?\"true\":undefined} onClick={openSearch} >\r\n                                        <FontAwesomeIcon icon={faSearch} />\r\n                                        <span>Search</span>\r\n                                    </li>\r\n                                    <li className=\"open-navigation\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        isopen={overlay===\"main\"?\"true\":undefined} onClick={openNavigation} >\r\n                                        <FontAwesomeIcon icon={faFolderOpen} />\r\n                                        <span>Navigation view</span>\r\n                                    </li>\r\n                                    <li className=\"save-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        onClick={handleSaveToFile} >\r\n                                        <FontAwesomeIcon icon={faFileDownload} />\r\n                                        <span>Download as file</span>\r\n                                    </li>\r\n                                    <li className=\"copy-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"}\r\n                                        onClick={handleCopyAsJSON} >\r\n                                        <FontAwesomeIcon icon={faClipboard} />\r\n                                        <span>Copy as JSON</span>\r\n                                    </li>\r\n                                    {/* <li className=\"about-button\" tabIndex={overlay===\"none\"?\"-1\":\"0\"} >\r\n                                        <FontAwesomeIcon icon={faInfo} />\r\n                                        <span>About</span>\r\n                                    </li> */}\r\n                                </ul>\r\n                        }\r\n                        {\r\n                            overlay === \"main\" &&\r\n                                <MainOverlay\r\n                                    source={this.state.source}\r\n                                    selectedObject={selectedObject}\r\n                                    handleSelect={handleSelect} />\r\n                        }\r\n                        {\r\n                            overlay === \"search\" &&\r\n                                <SearchOverlay\r\n                                    source={this.state.source}\r\n                                    handleSelect={handleSelect} />\r\n                        }\r\n                    </div>\r\n                    <ul className=\"timeline\" dragging={mouseDown!==null ? \"dragging\" : undefined} onWheel={handleScroll} >\r\n                        <li className=\"timeline-item ruler-container\">\r\n                            <div></div>\r\n                            <div className=\"ruler\">\r\n                                <div className=\"ruler-wrapper\">\r\n                                    {\r\n                                        allUniqueDates.map((posn, i) =>\r\n                                            posn >= scrollPosn &&\r\n                                                <div className=\"rule\" posn={posn} key={i}\r\n                                                    style={{ \"left\": 100*(posn - earliestDate)/(totalLength/zoom) + \"%\" }} />\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        {\r\n                            Object.values(source.timelines).map((line, i) =>\r\n                                <li className=\"timeline-item\" label={line.label} key={i}\r\n                                    disabled={disabledArray[i] ? \"disabled\" : undefined}\r\n                                    tracked={isTracked(line) ? \"tracked\" : undefined}>\r\n                                    <div className=\"line-label\" title={line.label}\r\n                                        style={{ \"color\": line.color }}>\r\n                                        <button className=\"line-toggle\" tabIndex={overlay===\"none\"?\"0\":\"-1\"} onClick={handleToggleLine}>\r\n                                            <FontAwesomeIcon icon={disabledArray[i] ? faEyeSlash : faEye} />\r\n                                        </button>\r\n                                        <button className=\"line-name\" tabIndex={overlay===\"none\"?\"0\":\"-1\"} onClick={handleSelectTimeline}>\r\n                                            <span>{line.label}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"line-container\">\r\n                                        <div className=\"line-wrapper\">\r\n                                            <svg>\r\n                                                {\r\n                                                    (line.start >= scrollPosn || line.end >= scrollPosn) &&\r\n                                                    <line className=\"line-main\" stroke={line.color} y1=\"50%\" y2=\"50%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                    }\r\n                                                {\r\n                                                    line.start >= scrollPosn &&\r\n                                                        <line className=\"line-end\" stroke={line.color} y1=\"35%\" y2=\"65%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                }\r\n                                                {\r\n                                                    line.end >= scrollPosn &&\r\n                                                        <line className=\"line-end\" stroke={line.color} y1=\"35%\" y2=\"65%\"\r\n                                                            x1={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                            x2={Math.max(0, 100*(line.start - earliestDate)/(totalLength/zoom)) + Math.max(0, 100*(line.end - Math.max(line.start, scrollPosn))/(totalLength/zoom)) + \"%\"}\r\n                                                        />\r\n                                                }\r\n                                                {\r\n                                                    Object.values(source.events).filter(\r\n                                                        event => event.timelines.indexOf(line.label) >= 0\r\n                                                    ).map((event, j) =>\r\n                                                        event.posn >= scrollPosn &&\r\n                                                            <g key={j}>\r\n                                                                <circle className=\"line-event\" posn={event.posn} label={event.label} tabIndex={!disabledArray[i] && isTracked(line) && overlay===\"none\" ? \"0\" : undefined}\r\n                                                                    stroke={line.color} cy=\"50%\" cx={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    onMouseOver={(e) => !(line.label===selectedTimeline && event.label===selectedEvent) && e.target.setAttribute('r', '0.75em') }\r\n                                                                    onMouseOut={(e) => !(line.label===selectedTimeline && event.label===selectedEvent) && e.target.setAttribute('r', '0.5em') }\r\n                                                                    onClick={this.handleSelectEvent} >\r\n                                                                </circle>\r\n                                                                <line y1=\"50%\" y2=\"0%\"\r\n                                                                    x1={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    x2={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"} />\r\n                                                                <rect fill=\"white\" height=\"1.5em\" y=\"-0.75em\" rx=\"0.25em\" ry=\"0.25em\"\r\n                                                                    width={`[${event.posn}] ${event.label}`.length + \"ch\"}\r\n                                                                    x={\"calc(\" + 100*(event.posn - earliestDate)/(totalLength/zoom) + \"% - \" + (`[${event.posn}] ${event.label}`.length/2) + \"ch)\"}\r\n                                                                />\r\n                                                                <text x={100*(event.posn - earliestDate)/(totalLength/zoom) + \"%\"}\r\n                                                                    dominantBaseline=\"middle\" textAnchor=\"middle\">\r\n                                                                    {`[${event.posn}] ${event.label}`}\r\n                                                                </text>\r\n                                                            </g>\r\n                                                    )\r\n                                                }\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                    {\r\n                        trackPosn >= scrollPosn &&\r\n                            <div className=\"timeline-tracker\" posn={trackPosn}\r\n                                style={{ \"left\": trackCoord + \"px\" }} />\r\n                    }\r\n                    <div className=\"timeline-bottom\">\r\n                        <div className=\"timeline-scrollbar\">\r\n                            <div className=\"scrollbar-thumb\"\r\n                                style={{ \"left\": 100*scrollPosn/(totalLength) + \"%\",\r\n                                            \"width\": \"calc(\" + 100/zoom + \"% - \" + linesLeft + \"px)\",\r\n                                            \"marginLeft\": linesLeft,\r\n                                            \"opacity\": zoom===1?\"0\":\"1\" }} />\r\n                        </div>\r\n                        <div className=\"timeline-controls\">\r\n                            <div></div>\r\n                            {/* <button className=\"about-button\">\r\n                                <FontAwesomeIcon icon={faInfo} />\r\n                                <span>About</span>\r\n                            </button> */}\r\n                            <div className=\"zoom-info\" title=\"Click and drag or use Alt+Scroll to zoom timelines\">\r\n                                <span zoom={Math.round(zoom*100)}\r\n                                    onMouseMove={(e) => this.state.mouseDown && handleDragToZoom(e)}>\r\n                                    <FontAwesomeIcon icon={faSearch} />\r\n                                    <span>{Math.floor(zoom*100) + \"%\"}</span>\r\n                                </span>\r\n                            </div>\r\n                            {\r\n                                trackPosn >= 0 && (\r\n                                    <button className=\"clear-button\" onClick={handleClearState}>\r\n                                        <FontAwesomeIcon icon={faTimes} />\r\n                                        <span>Clear selected</span>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                            { trackPosn === -1 && <div /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","\r\nimport React from 'react';\r\n\r\nimport './App.css';\r\nimport './style/style.css';\r\n\r\nimport source from './data/test-lines.json'\r\nimport Timeline from './components/Timeline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: source,\r\n        };\r\n        this.handleLoadFile = this.handleLoadFile.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleLoadFile(json) {\r\n        this.setState({\r\n            lines: JSON.parse(json),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const lines = this.state.lines;\r\n\r\n        if(lines !== null)\r\n            return (\r\n                <div className=\"App\">\r\n                    <Timeline source={source} />\r\n                </div>\r\n            );\r\n        else return(\r\n            <div className=\"App\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}