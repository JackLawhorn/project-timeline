{"version":3,"sources":["components/Timeline.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timeline","props","state","lines","selectedEvent","earliestDate","latestDate","allDates","disabledArray","Array","length","fill","trackPosn","trackedArray","hasMounted","zoom","scrollPosn","resizeTicker","handleSelect","totalLength","bind","trackerCoord","updateTimeline","handleToggleLine","handleTrack","handleSelectEvent","handleClearSelected","handleZoomIn","handleZoomOut","handleScroll","renderLoad","fullRender","this","concat","forEach","line","i","events","event","j","posn","Math","round","random","end","start","thisObj","window","addEventListener","setState","undefined","$","position","linesLeft","left","width","max","indexOf","push","e","label","target","parentElement","getAttribute","type","buttons","hasClass","x","clientX","linesWidth","toFixed","timeline","preventDefault","stopPropagation","closest","attr","min","altKey","shiftKey","deltaY","delta","className","trackCoord","sort","a","b","zoomed","onMouseDown","onMouseMove","onWheel","style","map","posnvisible","color","title","checked","onChange","tracked","startvisible","endvisible","isselected","onClick","React","Component","App","newSelected","selectedDisplayText","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a82cca4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lines: props.lines,\r\n            selectedEvent: props.selectedEvent,\r\n\r\n            earliestDate: 0,\r\n            latestDate: 0,\r\n            allDates: [],\r\n            disabledArray: Array(props.lines.length).fill(false),\r\n            \r\n            trackPosn: -1,\r\n            trackedArray: Array(props.lines.length).fill(true),\r\n            \r\n            hasMounted: false,\r\n            zoom: 1,\r\n            scrollPosn: 0,\r\n            resizeTicker: 0,\r\n        }\r\n        this.handleSelect = props.handleSelect;\r\n\r\n        this.totalLength = this.totalLength.bind(this);\r\n        this.trackerCoord = this.trackerCoord.bind(this);\r\n        this.updateTimeline = this.updateTimeline.bind(this);\r\n        this.handleToggleLine = this.handleToggleLine.bind(this);\r\n        this.handleTrack = this.handleTrack.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.handleClearSelected = this.handleClearSelected.bind(this);\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        \r\n        this.renderLoad = this.renderLoad.bind(this);\r\n        this.fullRender = this.fullRender.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var lines = this.state.lines.concat([]);\r\n        this.state.lines.forEach(function(line, i) {\r\n            line.events.forEach(function(event, j) {\r\n                event.posn = Math.round(Math.random()*(line.end-line.start) + line.start);\r\n            })\r\n        });\r\n\r\n        var thisObj = this;\r\n        window.addEventListener('resize', function() {\r\n            const resizeTicker = thisObj.state.resizeTicker + 0;\r\n            thisObj.setState({\r\n                resizeTicker: resizeTicker + 1,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            lines: lines,\r\n            hasMounted: true,\r\n        });\r\n\r\n        this.updateTimeline();\r\n    }\r\n\r\n    totalLength() {\r\n        return (this.state.latestDate-this.state.earliestDate)/this.state.zoom;\r\n    }\r\n\r\n    trackerCoord() {\r\n        if($(\"ul.timeline > li > .line-container\").position() !== undefined) {\r\n            const linesLeft = $(\"ul.timeline > li > .line-container\").position().left,\r\n                  linesWidth = $(\"ul.timeline > li > .line-container\").width();\r\n    \r\n            return linesWidth*(this.state.trackPosn-Math.max(this.state.earliestDate,this.state.scrollPosn))/this.totalLength() + linesLeft;\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    updateTimeline() {\r\n        var earliestDate = undefined,\r\n            latestDate = undefined,\r\n            allDates = [];\r\n        this.state.lines.forEach(function(line) {\r\n            if(earliestDate === undefined) {\r\n                earliestDate = line.start;\r\n                latestDate = line.end;\r\n            }\r\n            else {\r\n                if(line.start < earliestDate) earliestDate = line.start;\r\n                if(line.end > latestDate) latestDate = line.end;\r\n            }\r\n            \r\n            if(allDates.indexOf(line.start) < 0) allDates.push(line.start);\r\n            if(allDates.indexOf(line.end) < 0) allDates.push(line.end);\r\n        });\r\n\r\n        this.setState({\r\n            earliestDate: earliestDate,\r\n            latestDate: latestDate,\r\n            allDates: allDates,\r\n        });\r\n    }\r\n\r\n    handleToggleLine(e) {\r\n        var disabledArray = this.state.disabledArray.concat([]);\r\n        this.state.lines.forEach(function(line, i) {\r\n            if(line.label === e.target.parentElement.getAttribute(\"label\"))\r\n                disabledArray[i] = !disabledArray[i];\r\n        })\r\n        this.setState({\r\n            disabledArray: disabledArray,\r\n        });\r\n    }\r\n\r\n    handleTrack(e) {\r\n        if(e.type === \"click\" || e.buttons === 1) {\r\n            if($(e.target).hasClass(\"line-event\")) this.handleSelectEvent(e); \r\n            else {\r\n                const totalLength = this.totalLength(),\r\n                      earliestDate = this.state.earliestDate,\r\n                      zoom = this.state.zoom,\r\n                      scrollPosn = this.state.scrollPosn,\r\n                      x = e.clientX,\r\n                      linesLeft = $(\"ul.timeline > li > .line-container\").position().left,\r\n                      linesWidth = $(\"ul.timeline > li > .line-container\").width(),\r\n                      linesPadding = 15;\r\n                var trackPosn = this.state.trackPosn + 0,\r\n                    trackedArray = Array(this.state.lines.length).fill(true);\r\n\r\n                if(x - linesLeft - linesPadding >= 0) {\r\n                    trackPosn = (totalLength/zoom*(x-linesLeft-linesPadding)/(linesWidth/zoom)+Math.max(earliestDate, scrollPosn)).toFixed(2);\r\n                    \r\n                    this.state.lines.forEach(function(line, i) {\r\n                        if(line.start > trackPosn || line.end < trackPosn)\r\n                            trackedArray[i] = false;\r\n                    });\r\n        \r\n                    this.setState({\r\n                        trackPosn: trackPosn,\r\n                        trackedArray: trackedArray,\r\n                        selectedEvent: { timeline: null, event: null }, \r\n                    }, function() { this.handleSelect(this.state.selectedEvent); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\"),\r\n              event = $(e.target).attr(\"label\"),\r\n              trackPosn = $(e.target).attr(\"posn\"),\r\n              trackedArray = Array(this.state.lines.length).fill(true);\r\n\r\n        this.state.lines.forEach(function(line, i) {\r\n            if(line.start > trackPosn || line.end < trackPosn)\r\n                trackedArray[i] = false;\r\n        });\r\n\r\n        this.setState({\r\n            selectedEvent: { timeline: timeline, event: event }, \r\n            trackPosn: trackPosn,\r\n            trackedArray: trackedArray,\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleClearSelected() {\r\n        this.setState({\r\n            selectedEvent: { timeline: null, event: null, },\r\n            trackPosn: -1,\r\n            trackedArray: Array(this.state.lines.length).fill(true),\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleZoomIn() {\r\n        const zoom = this.state.zoom;\r\n        this.setState({\r\n            zoom: Math.min(zoom + 0.1, 2),\r\n        });\r\n    }\r\n\r\n    handleZoomOut() {\r\n        const zoom = this.state.zoom;\r\n        this.setState({\r\n            zoom: Math.max(1, zoom - 0.1),\r\n        });\r\n    }\r\n\r\n    handleScroll(e) {\r\n        if(e.altKey || e.shiftKey) {\r\n            if(e.altKey) {\r\n                if(e.deltaY > 0) this.handleZoomOut(e);\r\n                else this.handleZoomIn(e);\r\n            }\r\n            else if(e.shiftKey) {\r\n                const scrollPosn = this.state.scrollPosn,\r\n                      zoom = this.state.zoom,\r\n                      earliestDate = this.state.earliestDate,\r\n                      latestDate = this.state.latestDate,\r\n                      delta = (e.deltaY < 0 ? -1 : 1)*zoom*this.totalLength()/20;\r\n                this.setState({\r\n                    scrollPosn: Math.min(latestDate - this.totalLength(), Math.max(earliestDate, scrollPosn + delta)),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <div className=\"load-spinner\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    fullRender() {\r\n        const selectedEvent = this.state.selectedEvent,\r\n              earliestDate = this.state.earliestDate + this.state.scrollPosn,\r\n              totalLength = this.totalLength(),\r\n              allDates = this.state.allDates,\r\n              disabledArray = this.state.disabledArray,\r\n              trackCoord = this.trackerCoord(),\r\n              trackPosn = this.state.trackPosn,\r\n              trackedArray = this.state.trackedArray,\r\n              zoom = this.state.zoom,\r\n              scrollPosn = this.state.scrollPosn,\r\n\r\n              handleToggleLine = this.handleToggleLine,\r\n              handleTrack = this.handleTrack,\r\n              handleClearSelected = this.handleClearSelected,\r\n              handleZoomIn = this.handleZoomIn,\r\n              handleZoomOut = this.handleZoomOut,\r\n              handleScroll = this.handleScroll,\r\n\r\n              linesLeft = $(\"ul.timeline > li > .line-container\").position() !== undefined ?\r\n                $(\"ul.timeline > li > .line-container\").position().left : 0;\r\n                \r\n        allDates.sort((a, b) => a-b);\r\n\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <ul className=\"timeline\" zoomed={this.state.zoom > 1 ? \"zoomed\" : undefined}\r\n                    onMouseDown={handleTrack} onMouseMove={handleTrack} onWheel={handleScroll}>\r\n                    {\r\n                        trackPosn >= 0 &&\r\n                            <div className=\"timeline-tracker\" posn={trackPosn}\r\n                                 style={{ \"left\": trackCoord + \"px\" }} />\r\n                    }\r\n                    <li className=\"timeline-item ruler-container\">\r\n                        <div />\r\n                        <div />\r\n                        <div className=\"ruler\">\r\n                            {\r\n                                allDates.map((posn, i) =>\r\n                                    <div className=\"rule\" posn={posn} key={i}\r\n                                         posnvisible={posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                         style={{ \"left\": 100*(posn - earliestDate)/totalLength + \"%\" }} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </li>\r\n                    {\r\n                        this.state.lines.map((line, i) =>\r\n                            <li className=\"timeline-item\" label={line.label} key={i}\r\n                                style={{ \"color\": line.color, }}>\r\n                                <div className=\"line-label\" title={line.label}>{line.label}</div>\r\n                                <input type=\"checkbox\" className=\"line-toggle\"\r\n                                       label={line.label} style={{ \"backgroundColor\": line.color }}\r\n                                       checked={disabledArray[i] ? undefined : \"checked\"}\r\n                                       onChange={handleToggleLine}/>\r\n                                <div className=\"line-container\" tracked={trackedArray[i] ? \"tracked\" : undefined}>\r\n                                    <div className=\"line\"\r\n                                         startvisible={line.start >= scrollPosn ? \"startvisible\" : undefined}\r\n                                         endvisible={line.end >= scrollPosn ? \"endvisible\" : undefined}\r\n                                         style={{ \"backgroundColor\": line.color,\r\n                                                  \"left\": Math.max(0, 100*(line.start - earliestDate)/totalLength) + \"%\",\r\n                                                  \"width\": Math.max(0, 100*(line.end-Math.max(line.start, scrollPosn))/totalLength) + \"%\" }} />\r\n                                    {\r\n                                        line.events.map((event, j) =>\r\n                                            <div className=\"line-event\" posn={event.posn} label={event.label} key={j}\r\n                                                 posnvisible={event.posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                                 isselected={(line.label===selectedEvent.timeline && event.label===selectedEvent.event) ?\r\n                                                              \"isselected\" : undefined}\r\n                                                 style={{ \"left\": 100*(event.posn - earliestDate)/totalLength + \"%\",\r\n                                                          \"backgroundColor\": line.color, }} />\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <div className=\"timeline-bottom\">\r\n                    {\r\n                        zoom > 1 &&\r\n                            <div className=\"timeline-scrollbar\">\r\n                                <div className=\"scrollbar-thumb\"\r\n                                    style={{ \"left\": 100*scrollPosn/(totalLength*zoom) + \"%\",\r\n                                             \"width\": \"calc(\" + 100/zoom + \"% - \" + linesLeft + \"px)\",\r\n                                             \"marginLeft\": linesLeft, }} />\r\n                            </div>\r\n                    }\r\n                    <div className=\"timeline-controls\">\r\n                        <button className=\"zoom-in\" onMouseDown={handleZoomIn}>+</button>\r\n                        <span zoom={Math.round(this.state.zoom*100)}>Zoom</span>\r\n                        <button className=\"zoom-out\" onMouseDown={handleZoomOut}>&minus;</button>\r\n                        {\r\n                            trackPosn >= 0 && (\r\n                                <button className=\"clear-button\" onClick={handleClearSelected}>Clear selected</button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","import React from 'react';\n\nimport './App.css';\nimport './style/style.css';\n\nimport lines from './data/test-lines.json';\n\nimport Timeline from './components/Timeline';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedEvent: { timeline: null, event: null, },\n        }\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleSelect(newSelected) {\n        this.setState({\n            selectedEvent: newSelected,\n        });\n    }\n\n    render() {\n        const selectedEvent = this.state.selectedEvent;\n        var selectedDisplayText = \"\";\n        if(lines !== undefined && selectedEvent.event !== null)\n            lines.forEach(function(line, i) {\n                line.events.forEach(function(event, j) {\n                    if(line.label===selectedEvent.timeline &&\n                        event.label===selectedEvent.event)\n                        selectedDisplayText = JSON.stringify(line);\n                });\n            });\n\n        return (\n            <div className=\"App\">\n                <Timeline lines={lines} selectedEvent={this.state.selectedEvent} handleSelect={this.handleSelect} />\n                <div className=\"displaySelected\">{selectedDisplayText}</div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}