{"version":3,"sources":["components/SplashScreen.jsx","components/Timeline.jsx","App.js","reportWebVitals.js","index.js"],"names":["SplashScreen","props","state","files","handleLoadFile","loadFile","bind","newFile","handleChange","e","$","click","this","setState","fileReader","history","FileReader","readAsText","target","onload","result","className","onClick","type","id","onChange","React","Component","Timeline","lines","selectedEvent","earliestDate","latestDate","allDates","disabledArray","Array","length","fill","trackPosn","trackedArray","hasMounted","zoom","scrollPosn","resizeTicker","mouseDown","handleSelect","totalLength","trackerCoord","updateTimeline","handleToggleLine","handleTrack","handleSelectEvent","handleClearSelected","handleZoomIn","handleZoomOut","handleScroll","renderLoad","fullRender","concat","forEach","line","i","events","event","j","posn","Math","round","random","end","start","thisObj","window","addEventListener","undefined","position","linesLeft","left","width","max","indexOf","push","label","parentElement","getAttribute","buttons","hasClass","x","clientX","linesWidth","timeline","preventDefault","stopPropagation","closest","attr","oldZoom","newZoom","min","altKey","shiftKey","deltaY","delta","trackCoord","sort","a","b","onWheel","onMouseDown","onMouseUp","onMouseMove","dragging","style","map","posnvisible","color","title","checked","tracked","startvisible","endvisible","isselected","icon","faSave","faSearch","floor","faTimesCircle","App","json","JSON","parse","newSelected","selectedDisplayText","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.513847c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass SplashScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            files: \"\",\r\n        }\r\n        this.handleLoadFile = props.handleLoadFile;\r\n        this.loadFile = this.loadFile.bind(this);\r\n        this.newFile = this.newFile.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    \r\n    }\r\n\r\n    loadFile(e) {\r\n        $(\"#file-input\").click();\r\n    }\r\n\r\n    newFile() {\r\n        this.setState({\r\n            files: \"[]\",\r\n        }, function() { this.handleLoadFile(this.state.files); });\r\n    }\r\n\r\n    handleChange(e) {\r\n        var history = this.state.history;\r\n\r\n        const fileReader = new FileReader();        \r\n        fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n        fileReader.onload = e => {\r\n            this.setState({\r\n                files: e.target.result,\r\n            }, function() {\r\n\r\n                this.handleLoadFile(this.state.files);\r\n            });\r\n        };\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"splash-screen\">\r\n                <h1>Timeline</h1>\r\n                <p>Timeline is a notes app for time-based projects.</p>\r\n\r\n                <div className=\"new-file-prompt\">\r\n                    <h1>Create new file</h1>\r\n                    <button onClick={this.newFile}>Start</button>\r\n                </div>\r\n                <div className=\"load-file-prompt\">\r\n                    <h1>Load from file</h1>\r\n                    <input type=\"file\" id=\"file-input\" onChange={this.handleChange} />\r\n                    <button onClick={this.loadFile}>Choose file</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SplashScreen;","import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass Timeline extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lines: props.lines,\r\n            selectedEvent: props.selectedEvent,\r\n\r\n            earliestDate: 0,\r\n            latestDate: 0,\r\n            allDates: [],\r\n            disabledArray: Array(props.lines.length).fill(false),\r\n            \r\n            trackPosn: -1,\r\n            trackedArray: Array(props.lines.length).fill(true),\r\n            \r\n            hasMounted: false,\r\n            zoom: 1,\r\n            scrollPosn: 0,\r\n            resizeTicker: 0,\r\n            mouseDown: false,\r\n        }\r\n        this.handleSelect = props.handleSelect;\r\n\r\n        this.totalLength = this.totalLength.bind(this);\r\n        this.trackerCoord = this.trackerCoord.bind(this);\r\n        this.updateTimeline = this.updateTimeline.bind(this);\r\n        this.handleToggleLine = this.handleToggleLine.bind(this);\r\n        this.handleTrack = this.handleTrack.bind(this);\r\n        this.handleSelectEvent = this.handleSelectEvent.bind(this);\r\n        this.handleClearSelected = this.handleClearSelected.bind(this);\r\n        this.handleZoomIn = this.handleZoomIn.bind(this);\r\n        this.handleZoomOut = this.handleZoomOut.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        \r\n        this.renderLoad = this.renderLoad.bind(this);\r\n        this.fullRender = this.fullRender.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var lines = this.state.lines.concat([]);\r\n        this.state.lines.forEach(function(line, i) {\r\n            line.events.forEach(function(event, j) {\r\n                event.posn = Math.round(Math.random()*(line.end-line.start) + line.start);\r\n            })\r\n        });\r\n\r\n        var thisObj = this;\r\n        window.addEventListener('resize', function() {\r\n            const resizeTicker = thisObj.state.resizeTicker + 0;\r\n            thisObj.setState({\r\n                resizeTicker: resizeTicker + 1,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            lines: lines,\r\n            hasMounted: true,\r\n        });\r\n\r\n        this.updateTimeline();\r\n    }\r\n\r\n    totalLength() {\r\n        return (this.state.latestDate-this.state.earliestDate)/this.state.zoom;\r\n    }\r\n\r\n    trackerCoord() {\r\n        if($(\"ul.timeline > li > .line-container\").position() !== undefined) {\r\n            const linesLeft = $(\"ul.timeline > li > .line-container\").position().left,\r\n                  linesWidth = $(\"ul.timeline > li > .line-container\").width();\r\n    \r\n            return linesWidth*(this.state.trackPosn-Math.max(this.state.earliestDate,this.state.scrollPosn))/this.totalLength() + linesLeft;\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    updateTimeline() {\r\n        var earliestDate = undefined,\r\n            latestDate = undefined,\r\n            allDates = [];\r\n        this.state.lines.forEach(function(line) {\r\n            if(earliestDate === undefined) {\r\n                earliestDate = line.start;\r\n                latestDate = line.end;\r\n            }\r\n            else {\r\n                if(line.start < earliestDate) earliestDate = line.start;\r\n                if(line.end > latestDate) latestDate = line.end;\r\n            }\r\n            \r\n            if(allDates.indexOf(line.start) < 0) allDates.push(line.start);\r\n            if(allDates.indexOf(line.end) < 0) allDates.push(line.end);\r\n        });\r\n\r\n        this.setState({\r\n            earliestDate: earliestDate,\r\n            latestDate: latestDate,\r\n            allDates: allDates,\r\n        });\r\n    }\r\n\r\n    handleToggleLine(e) {\r\n        var disabledArray = this.state.disabledArray.concat([]);\r\n        this.state.lines.forEach(function(line, i) {\r\n            if(line.label === e.target.parentElement.getAttribute(\"label\"))\r\n                disabledArray[i] = !disabledArray[i];\r\n        })\r\n        this.setState({\r\n            disabledArray: disabledArray,\r\n        });\r\n    }\r\n\r\n    handleTrack(e) {\r\n        if((e.buttons === 1 || e.type === \"click\")) {\r\n            if($(e.target).hasClass(\"line-event\")) this.handleSelectEvent(e);\r\n            else {\r\n                const totalLength = this.totalLength(),\r\n                      earliestDate = this.state.earliestDate,\r\n                    //   latestDate = this.state.latestDate,\r\n                      zoom = this.state.zoom,\r\n                      scrollPosn = this.state.scrollPosn,\r\n                      \r\n                      x = e.clientX,\r\n                      linesLeft = $(\"ul.timeline > li > .line-container\").position().left,\r\n                      linesWidth = $(\"ul.timeline > li > .line-container\").width(),\r\n                      linesPadding = 15;\r\n                var trackPosn = this.state.trackPosn + 0,\r\n                    trackedArray = Array(this.state.lines.length).fill(true); //,\r\n                    // scrollDelta = 0;\r\n\r\n                if(x - linesLeft - linesPadding >= 0) {\r\n                    trackPosn = totalLength/zoom*(x-linesLeft-linesPadding)/(linesWidth/zoom)+Math.max(earliestDate, scrollPosn);\r\n\r\n                    // if(trackPosn < scrollPosn + 10/zoom)\r\n                    //     scrollDelta += -1*totalLength/100;\r\n                    // else if(trackPosn > totalLength - 10/zoom)\r\n                    //     scrollDelta += totalLength/100;\r\n\r\n                    this.state.lines.forEach(function(line, i) {\r\n                        if(line.start > trackPosn || line.end < trackPosn)\r\n                            trackedArray[i] = false;\r\n                    });\r\n        \r\n                    this.setState({\r\n                        trackPosn: trackPosn,\r\n                        trackedArray: trackedArray,\r\n                        selectedEvent: { timeline: null, event: null },\r\n                        // scrollPosn: Math.min(latestDate - totalLength, Math.max(earliestDate, scrollPosn + scrollDelta)),\r\n                    }, function() { this.handleSelect(this.state.selectedEvent); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const timeline = $(e.target).closest(\".timeline-item\").attr(\"label\"),\r\n              event = $(e.target).attr(\"label\"),\r\n              trackPosn = $(e.target).attr(\"posn\"),\r\n              trackedArray = Array(this.state.lines.length).fill(true);\r\n\r\n        this.state.lines.forEach(function(line, i) {\r\n            if(line.start > trackPosn || line.end < trackPosn)\r\n                trackedArray[i] = false;\r\n        });\r\n\r\n        this.setState({\r\n            selectedEvent: { timeline: timeline, event: event }, \r\n            trackPosn: trackPosn,\r\n            trackedArray: trackedArray,\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleClearSelected() {\r\n        this.setState({\r\n            selectedEvent: { timeline: null, event: null, },\r\n            trackPosn: -1,\r\n            trackedArray: Array(this.state.lines.length).fill(true),\r\n        }, function() { this.handleSelect(this.state.selectedEvent); });\r\n    }\r\n\r\n    handleZoomIn() {\r\n        const totalLength = this.totalLength() * this.state.zoom,\r\n              oldZoom = this.state.zoom + 0,\r\n              scrollPosn = this.state.scrollPosn + 0;\r\n        const newZoom = Math.min(2, oldZoom + 0.1);\r\n\r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n\r\n    handleZoomOut() {\r\n        const totalLength = this.totalLength() * this.state.zoom,\r\n              oldZoom = this.state.zoom + 0,\r\n              scrollPosn = this.state.scrollPosn + 0;\r\n        const newZoom = Math.max(1, oldZoom - 0.1);\r\n\r\n        this.setState({\r\n            zoom: newZoom,\r\n            scrollPosn: Math.max(0, Math.min(totalLength - (totalLength/newZoom), scrollPosn*newZoom/oldZoom)),\r\n        });\r\n    }\r\n\r\n    handleScroll(e) {\r\n        if(e.altKey || e.shiftKey) {\r\n            if(e.altKey) {\r\n                if(e.deltaY > 0) this.handleZoomOut(e);\r\n                else this.handleZoomIn(e);\r\n            }\r\n            else if(e.shiftKey) {\r\n                const scrollPosn = this.state.scrollPosn,\r\n                      zoom = this.state.zoom,\r\n                      earliestDate = this.state.earliestDate,\r\n                      latestDate = this.state.latestDate,\r\n                      delta = (e.deltaY < 0 ? -1 : 1)*zoom*this.totalLength()/20;\r\n                this.setState({\r\n                    scrollPosn: Math.min(latestDate - this.totalLength(), Math.max(earliestDate, scrollPosn + delta)),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasMounted) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    renderLoad() {\r\n        return (\r\n            <div className=\"timeline-container\">\r\n                <div className=\"load-spinner\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    fullRender() {\r\n        const selectedEvent = this.state.selectedEvent,\r\n              earliestDate = this.state.earliestDate + this.state.scrollPosn,\r\n              totalLength = this.totalLength(),\r\n              allDates = this.state.allDates,\r\n              disabledArray = this.state.disabledArray,\r\n              trackCoord = this.trackerCoord(),\r\n              trackPosn = this.state.trackPosn,\r\n              trackedArray = this.state.trackedArray,\r\n              zoom = this.state.zoom,\r\n              scrollPosn = this.state.scrollPosn,\r\n\r\n              handleToggleLine = this.handleToggleLine,\r\n              handleTrack = this.handleTrack,\r\n              handleClearSelected = this.handleClearSelected,\r\n              handleZoomIn = this.handleZoomIn,\r\n              handleZoomOut = this.handleZoomOut,\r\n              handleScroll = this.handleScroll,\r\n\r\n              linesLeft = $(\"ul.timeline > li > .line-container\").position() !== undefined ?\r\n                $(\"ul.timeline > li > .line-container\").position().left : 0;\r\n                \r\n        allDates.sort((a, b) => a-b);\r\n\r\n        return (\r\n            <div className=\"timeline-container\" onWheel={handleScroll}\r\n                 onMouseDown={(e) => this.setState({ mouseDown: e.target, })}\r\n                 onMouseUp={(e) => {this.setState({ mouseDown: null, })}}>\r\n                <ul className=\"timeline\" onMouseDown={handleTrack} onMouseMove={handleTrack}\r\n                    dragging={this.state.mouseDown !== null ? \"dragging\" : undefined}>\r\n                    {\r\n                        trackPosn >= scrollPosn &&\r\n                            <div className=\"timeline-tracker\" posn={trackPosn}\r\n                                 style={{ \"left\": trackCoord + \"px\" }} />\r\n                    }\r\n                    <li className=\"timeline-item ruler-container\">\r\n                        <div />\r\n                        <div />\r\n                        <div className=\"ruler\">\r\n                            {\r\n                                allDates.map((posn, i) =>\r\n                                    <div className=\"rule\" posn={posn} key={i}\r\n                                         posnvisible={posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                         style={{ \"left\": 100*(posn - earliestDate)/totalLength + \"%\" }} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </li>\r\n                    {\r\n                        this.state.lines.map((line, i) =>\r\n                            <li className=\"timeline-item\" label={line.label} key={i}\r\n                                style={{ \"color\": line.color, }}>\r\n                                <div className=\"line-label\" title={line.label}>{line.label}</div>\r\n                                <input type=\"checkbox\" className=\"line-toggle\"\r\n                                       label={line.label} style={{ \"backgroundColor\": line.color }}\r\n                                       checked={disabledArray[i] ? undefined : \"checked\"}\r\n                                       onChange={handleToggleLine}/>\r\n                                <div className=\"line-container\" tracked={trackedArray[i] ? \"tracked\" : undefined}>\r\n                                    <div className=\"line\"\r\n                                         startvisible={line.start >= scrollPosn ? \"startvisible\" : undefined}\r\n                                         endvisible={line.end >= scrollPosn ? \"endvisible\" : undefined}\r\n                                         style={{ \"backgroundColor\": line.color,\r\n                                                  \"left\": Math.max(0, 100*(line.start - earliestDate)/totalLength) + \"%\",\r\n                                                  \"width\": Math.max(0, 100*(line.end-Math.max(line.start, scrollPosn))/totalLength) + \"%\" }} />\r\n                                    {\r\n                                        line.events.map((event, j) =>\r\n                                            <div className=\"line-event\" posn={event.posn} label={event.label} key={j}\r\n                                                 posnvisible={event.posn >= scrollPosn ? \"posnvisible\" : undefined}\r\n                                                 isselected={(line.label===selectedEvent.timeline && event.label===selectedEvent.event) ?\r\n                                                              \"isselected\" : undefined}\r\n                                                 style={{ \"left\": 100*(event.posn - earliestDate)/totalLength + \"%\",\r\n                                                          \"backgroundColor\": line.color, }} />\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <div className=\"timeline-bottom\">\r\n                    <div className=\"timeline-scrollbar\">\r\n                        <div className=\"scrollbar-thumb\"\r\n                            style={{ \"left\": 100*scrollPosn/(totalLength*zoom) + \"%\",\r\n                                        \"width\": \"calc(\" + 100/zoom + \"% - \" + linesLeft + \"px)\",\r\n                                        \"marginLeft\": linesLeft, }} />\r\n                    </div>\r\n                    <div className=\"timeline-controls\">\r\n                        <button className=\"save-button\">\r\n                            <FontAwesomeIcon icon={faSave} />\r\n                            <span>Save file</span>\r\n                        </button>\r\n                        <span>\r\n                            <button className=\"zoom-in\" onMouseDown={handleZoomIn}>+</button>\r\n                            <span zoom={Math.round(this.state.zoom*100)}>\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                                <span>{Math.floor(zoom*100) + \"%\"}</span>\r\n                            </span>\r\n                            <button className=\"zoom-out\" onMouseDown={handleZoomOut}>&minus;</button>\r\n                        </span>\r\n                        {\r\n                            trackPosn >= 0 && (\r\n                                <button className=\"clear-button\" onClick={handleClearSelected}>\r\n                                    <FontAwesomeIcon icon={faTimesCircle} />\r\n                                    <span>Clear selected</span>\r\n                                </button>\r\n                            )\r\n                        }\r\n                        { trackPosn === -1 && <div /> }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timeline;","\r\nimport React from 'react';\r\n\r\nimport './App.css';\r\nimport './style/style.css';\r\n\r\nimport lines from './data/test-lines.json'\r\n\r\nimport SplashScreen from './components/SplashScreen';\r\nimport Timeline from './components/Timeline';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lines: lines,\r\n            selectedEvent: { timeline: null, event: null, },\r\n        }\r\n        this.handleLoadFile = this.handleLoadFile.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.fullRender = this.fullRender.bind(this);\r\n        this.renderLoad = this.renderLoad.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleLoadFile(json) {\r\n        this.setState({\r\n            lines: JSON.parse(json),\r\n        });\r\n    }\r\n\r\n    handleSelect(newSelected) {\r\n        this.setState({\r\n            selectedEvent: newSelected,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.lines !== null) return this.fullRender();\r\n        else return this.renderLoad();\r\n    }\r\n\r\n    fullRender() {\r\n        const lines = this.state.lines,\r\n              selectedEvent = this.state.selectedEvent;\r\n        var selectedDisplayText = \"\";\r\n        if(lines !== undefined && selectedEvent.event !== null)\r\n            lines.forEach(function(line, i) {\r\n                line.events.forEach(function(event, j) {\r\n                    if(line.label===selectedEvent.timeline &&\r\n                        event.label===selectedEvent.event)\r\n                        selectedDisplayText = JSON.stringify(line);\r\n                });\r\n            });\r\n\r\n        return(\r\n            <div className=\"App\">\r\n                <Timeline lines={lines} selectedEvent={this.state.selectedEvent} handleSelect={this.handleSelect} />\r\n                <div className=\"blur\" />\r\n                <div className=\"displaySelected\">{selectedDisplayText}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderLoad() {\r\n        return(\r\n            <div className=\"App\">\r\n                <SplashScreen handleLoadFile={this.handleLoadFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}